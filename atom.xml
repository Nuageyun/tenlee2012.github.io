<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[豪气干云]]></title>
  <subtitle><![CDATA[tenlee's blog]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://tenlee2012.github.io//"/>
  <updated>2016-04-21T14:27:12.404Z</updated>
  <id>http://tenlee2012.github.io//</id>
  
  <author>
    <name><![CDATA[tenlee]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Django添加全文搜索功能入门]]></title>
    <link href="http://tenlee2012.github.io/2016/04/21/Django%E6%B7%BB%E5%8A%A0%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD%E5%85%A5%E9%97%A8/"/>
    <id>http://tenlee2012.github.io/2016/04/21/Django添加全文搜索功能入门/</id>
    <published>2016-04-21T14:14:28.000Z</published>
    <updated>2016-04-21T14:27:12.404Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>感觉网络上关于Django全文搜索的中文文章太少，并且讲的也不是很到位，就是简单介绍了怎么配置，并没有说这样配置有什么用，所以依然很迷茫。所以希望我这篇文章能够帮助到后来人。</p>
</blockquote>
<h3 id="一：使用的工具">一：使用的工具</h3><ul>
<li><a href="http://django-haystack.readthedocs.org/" target="_blank" rel="external">haystack</a>是django的开源搜索框架，该框架支持<strong><a href="http://django-haystack.readthedocs.org/en/v2.4.1/tutorial.html#solr" target="_blank" rel="external">Solr</a></strong>, <strong>Elasticsearch</strong>, <strong>Whoosh</strong>, <em>**Xapian</em>搜索引擎，不用更改代码，直接切换引擎，减少代码量。</li>
<li>搜索引擎使用<a href="https://whoosh.readthedocs.org/en/latest/" target="_blank" rel="external">Whoosh</a>，这是一个由纯Python实现的全文搜索引擎，没有二进制文件等，比较小巧，配置比较简单，当然性能自然略低。</li>
<li>中文分词<a href="https://github.com/fxsjy/jieba" target="_blank" rel="external">Jieba</a>，由于<strong>Whoosh</strong>自带的是英文分词，对中文的分词支持不是太好，故用<strong>jieba</strong>替换<strong>whoosh</strong>的分词组件。</li>
<li>其他：Python 3.4.4, Django 1.8.3，Debian 4.2.6_3</li>
</ul>
<a id="more"></a>
<h3 id="二：配置说明">二：配置说明</h3><p>现在假设我们的项目叫做<code>Project</code>,有一个<code>myapp</code>的app，简略的目录结构如下。</p>
<ul>
<li>Project<ul>
<li>Project<ul>
<li>settings.py</li>
</ul>
</li>
<li>blog<ul>
<li>models.py</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>此<code>models.py</code>的内容假设如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from django<span class="class">.db</span> import models</span><br><span class="line">from django<span class="class">.contrib</span><span class="class">.auth</span><span class="class">.models</span> import User</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class <span class="function"><span class="title">Note</span><span class="params">(models.Model)</span></span>:</span><br><span class="line">    user = models.<span class="function"><span class="title">ForeignKey</span><span class="params">(User)</span></span></span><br><span class="line">    pub_date = models.<span class="function"><span class="title">DateTimeField</span><span class="params">()</span></span></span><br><span class="line">    title = models.<span class="function"><span class="title">CharField</span><span class="params">(max_length=<span class="number">200</span>)</span></span></span><br><span class="line">    <span class="tag">body</span> = models.<span class="function"><span class="title">TextField</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return self.title</span><br></pre></td></tr></table></figure></p>
<h5 id="1-_首先安装各工具">1. 首先安装各工具</h5><p><code>pip install whoosh django-haystack jieba</code></p>
<h5 id="2-_添加_Haystack_到Django的_INSTALLED_APPS">2. 添加 Haystack 到Django的 INSTALLED_APPS</h5><p>配置Django项目的<strong>settings.py</strong>里面的 <code>INSTALLED_APPS</code>添加Haystack,例子：<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">INSTALLED_APPS</span> = [ </span><br><span class="line">        <span class="symbol">'django</span>.contrib.admin',</span><br><span class="line">        <span class="symbol">'django</span>.contrib.auth', </span><br><span class="line">        <span class="symbol">'django</span>.contrib.contenttypes', </span><br><span class="line">        <span class="symbol">'django</span>.contrib.sessions', </span><br><span class="line">        <span class="symbol">'django</span>.contrib.sites', </span><br><span class="line"></span><br><span class="line">          # <span class="type">Added</span>. haystack先添加，</span><br><span class="line">          <span class="symbol">'haystack'</span>, </span><br><span class="line">          # <span class="type">Then</span> your usual apps... 自己的app要写在haystakc后面</span><br><span class="line">          <span class="symbol">'blog'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p><a href="http://django-haystack.readthedocs.org/en/v2.4.1/tutorial.html#add-haystack-to-installed-apps" target="_blank" rel="external">点我看英文原版</a></p>
<h5 id="3-_修改_你的_settings-py，以配置引擎">3. 修改 你的 settings.py，以配置引擎</h5><p>本教程使用的是<code>Whoosh</code>，故配置如下：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import <span class="built_in">os</span></span><br><span class="line">HAYSTACK_CONNECTIONS = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'haystack.backends.whoosh_backend.WhooshEngine'</span>,</span><br><span class="line">        <span class="string">'PATH'</span>: <span class="built_in">os</span>.path.join(<span class="built_in">os</span>.path.dirname(__file__), <span class="string">'whoosh_index'</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中顾名思义，<code>ENGINE</code>为使用的引擎必须要有，如果引擎是<code>Whoosh</code>，则<code>PATH</code>必须要填写，其为Whoosh 索引文件的存放文件夹。<br>其他引擎的配置见<a href="http://django-haystack.readthedocs.org/en/v2.4.1/tutorial.html#configuration" target="_blank" rel="external">官方文档</a></p>
<h5 id="4-创建索引">4.创建索引</h5><p>如果你想针对某个app例如<code>mainapp</code>做全文检索，则必须在<code>mainapp</code>的目录下面建立<code>search_indexes.py</code>文件，文件名不能修改。内容如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> haystack <span class="keyword">import</span> indexes</span><br><span class="line"><span class="keyword">from</span> myapp.models <span class="keyword">import</span> Note</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteIndex</span><span class="params">(indexes.SearchIndex, indexes.Indexable)</span>:</span></span><br><span class="line">    text = indexes.CharField(document=<span class="keyword">True</span>, use_template=<span class="keyword">True</span>)</span><br><span class="line">    </span><br><span class="line">    author = indexes.CharField(model_attr=<span class="string">'user'</span>)</span><br><span class="line">    pub_date = indexes.DateTimeField(model_attr=<span class="string">'pub_date'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_model</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> Note</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">index_queryset</span><span class="params">(self, using=None)</span>:</span></span><br><span class="line">        <span class="string">"""Used when the entire index for model is updated."""</span></span><br><span class="line">        <span class="keyword">return</span> self.get_model().objects.filter(pub_date__lte=datetime.datetime.now())</span><br></pre></td></tr></table></figure></p>
<p>每个索引里面必须有且只能有一个字段为<code>document=True</code>，这代表haystack 和搜索引擎将使用此字段的内容作为索引进行检索(primary field)。其他的字段只是附属的属性，方便调用，并不作为检索数据。</p>
<blockquote>
<p>注意：如果使用一个字段设置了<code>document=True</code>，则一般约定此字段名为<code>text</code>，这是在<code>SearchIndex</code>类里面一贯的命名，以防止后台混乱，当然名字你也可以随便改，不过不建议改。</p>
</blockquote>
<p>并且，<code>haystack</code>提供了<code>use_template=True</code>在<code>text</code>字段，这样就允许我们使用<code>数据模板</code>去建立搜索引擎索引的文件，使用方便（官方推荐，当然还有其他复杂的建立索引文件的方式，目前我还不知道），数据模板的路径为<code>yourapp/templates/search/indexes/yourapp/note_text.txt</code>，例如本例子为<code>blog/templates/search/indexes/blog/note_text.txt</code>文件名必须为<code>要索引的类名_text.txt</code>,其内容为<br><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="expression">&#123;&#123; <span class="variable">object.title</span> &#125;&#125;</span><span class="xml"></span><br><span class="line"></span><span class="expression">&#123;&#123; <span class="variable">object.user.get</span>_<span class="variable">full</span>_<span class="variable">name</span> &#125;&#125;</span><span class="xml"></span><br><span class="line"></span><span class="expression">&#123;&#123; <span class="variable">object.body</span> &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>这个数据模板的作用是对<code>Note.title</code>, <code>Note.user.get_full_name</code>,<code>Note.body</code>这三个字段建立索引，当检索的时候会对这三个字段做全文检索匹配。</p>
<h5 id="5-在URL配置中添加SearchView，并配置模板">5.在URL配置中添加SearchView，并配置模板</h5><p>在<code>urls.py</code>中配置如下url信息，当然url路由可以随意写。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">r'^search/'</span>, include(<span class="string">'haystack.urls'</span>)),</span><br></pre></td></tr></table></figure></p>
<p>其实<code>haystack.urls</code>的内容为，<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> haystack.views <span class="keyword">import</span> SearchView</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>, SearchView(), name=<span class="string">'haystack_search'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p><code>SearchView()</code>视图函数默认使用的html模板为当前app目录下，路径为<code>myapp/templates/search/search.html</code><br>所以需要在<code>blog/templates/search/</code>下添加<code>search.html</code>文件，内容为<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">extends</span> 'base.html' %&#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">block</span> content %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">h2</span>&gt;</span>Search<span class="tag">&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">method</span>=<span class="value">"get"</span> <span class="attribute">action</span>=<span class="value">"."</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">table</span>&gt;</span></span><br><span class="line">            </span><span class="variable">&#123;&#123; form.as_table &#125;&#125;</span><span class="xml"></span><br><span class="line">            <span class="tag">&lt;<span class="title">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">td</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"Search"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><span class="template_tag">&#123;% <span class="keyword">if</span> query %&#125;</span><span class="xml"></span><br><span class="line">            <span class="tag">&lt;<span class="title">h3</span>&gt;</span>Results<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            </span><span class="template_tag">&#123;% <span class="keyword">for</span> result <span class="keyword">in</span> page.object_list %&#125;</span><span class="xml"></span><br><span class="line">                <span class="tag">&lt;<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="variable">&#123;&#123; result.object.get_absolute_url &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><span class="variable">&#123;&#123; result.object.title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">            </span><span class="template_tag">&#123;% <span class="keyword">empty</span> %&#125;</span><span class="xml"></span><br><span class="line">                <span class="tag">&lt;<span class="title">p</span>&gt;</span>No results found.<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">            </span><span class="template_tag">&#123;% <span class="keyword">endfor</span> %&#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line">            </span><span class="template_tag">&#123;% <span class="keyword">if</span> page.has_previous or page.has_next %&#125;</span><span class="xml"></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">                    </span><span class="template_tag">&#123;% <span class="keyword">if</span> page.has_previous %&#125;</span><span class="xml"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"?q=</span></span></span><span class="variable">&#123;&#123; query &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">&amp;amp;page=</span></span></span><span class="variable">&#123;&#123; page.previous_page_number &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml">&amp;laquo; Previous</span><span class="template_tag">&#123;% <span class="keyword">if</span> page.has_previous %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line">                    |</span><br><span class="line">                    </span><span class="template_tag">&#123;% <span class="keyword">if</span> page.has_next %&#125;</span><span class="xml"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"?q=</span></span></span><span class="variable">&#123;&#123; query &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">&amp;amp;page=</span></span></span><span class="variable">&#123;&#123; page.next_page_number &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml">Next &amp;raquo;</span><span class="template_tag">&#123;% <span class="keyword">if</span> page.has_next %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            </span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line">        </span><span class="template_tag">&#123;% <span class="keyword">else</span> %&#125;</span><span class="xml"></span><br><span class="line">            </span><span class="comment">&#123;# Show some example queries to run, maybe query syntax, something else? #&#125;</span><span class="xml"></span><br><span class="line">        </span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>很明显，它自带了分页。</p>
<h5 id="6-最后一步，重建索引文件">6.最后一步，重建索引文件</h5><p>使用<code>python manage.py rebuild_index</code>或者使用<code>update_index</code>命令。</p>
<p>好，下面运行项目，进入该url搜索一下试试吧。</p>
<h4 id="下面要做的，使用jieba分词">下面要做的，使用<code>jieba</code>分词</h4><p> 1 将文件<code>whoosh_backend.py</code>（该文件路径为<code>python路径/lib/python3.4/site-packages/haystack/backends/whoosh_backend.py</code><br>）拷贝到app下面，并重命名为<code>whoosh_cn_backend.py</code>，例如<code>blog/whoosh_cn_backend.py</code>。修改如下<br>添加<code>from jieba.analyse import ChineseAnalyzer</code><br>修改为如下<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">schema_fields[field_class.index_fieldname] =</span><br><span class="line">    TEXT(<span class="variable">stored=</span>True, <span class="variable">analyzer=</span>ChineseAnalyzer(),</span><br><span class="line">            <span class="variable">field_boost=</span>field_class.boost)</span><br></pre></td></tr></table></figure></p>
<p>2 在<code>settings.py</code>中修改引擎，如下<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">HAYSTACK_CONNECTIONS = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'blog.whoosh_cn_backend.WhooshEngine'</span>,</span><br><span class="line">        <span class="string">'PATH'</span>: os.path.<span class="keyword">join</span>(BASE_DIR, <span class="string">'whoosh_index'</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>3 重建索引，在进行搜索中文试试吧。</p>
<h4 id="索引自动更新">索引自动更新</h4><p>如果没有索引自动更新，那么每当有新数据添加到数据库，就要手动执行<code>update_index</code>命令是不科学的。自动更新索引的最简单方法在<br><code>settings.py</code>添加一个信号。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">HAYSTACK_SIGNAL_PROCESSOR</span> =</span><br><span class="line">            <span class="string">"haystack.signals.RealtimeSignalProcesso"</span></span><br></pre></td></tr></table></figure></p>
<p><a href="http://django-haystack.readthedocs.org/en/v2.4.1/signal_processors.html#realtime-realtimesignalprocessor" target="_blank" rel="external">官方文档</a></p>
<hr>
<p>看了这入门篇，你现在应该大概能配置一个简单的全文搜索了吧，如果想自定义怎么办？ 建议阅读官方文档和github的源码。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>感觉网络上关于Django全文搜索的中文文章太少，并且讲的也不是很到位，就是简单介绍了怎么配置，并没有说这样配置有什么用，所以依然很迷茫。所以希望我这篇文章能够帮助到后来人。</p>
</blockquote>
<h3 id="一：使用的工具">一：使用的工具</h3><ul>
<li><a href="http://django-haystack.readthedocs.org/">haystack</a>是django的开源搜索框架，该框架支持<strong><a href="http://django-haystack.readthedocs.org/en/v2.4.1/tutorial.html#solr">Solr</a></strong>, <strong>Elasticsearch</strong>, <strong>Whoosh</strong>, <em>**Xapian</em>搜索引擎，不用更改代码，直接切换引擎，减少代码量。</li>
<li>搜索引擎使用<a href="https://whoosh.readthedocs.org/en/latest/">Whoosh</a>，这是一个由纯Python实现的全文搜索引擎，没有二进制文件等，比较小巧，配置比较简单，当然性能自然略低。</li>
<li>中文分词<a href="https://github.com/fxsjy/jieba">Jieba</a>，由于<strong>Whoosh</strong>自带的是英文分词，对中文的分词支持不是太好，故用<strong>jieba</strong>替换<strong>whoosh</strong>的分词组件。</li>
<li>其他：Python 3.4.4, Django 1.8.3，Debian 4.2.6_3</li>
</ul>]]>
    
    </summary>
    
      <category term="Django" scheme="http://tenlee2012.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[简单的图书馆管理系统数据库设计]]></title>
    <link href="http://tenlee2012.github.io/2015/12/11/sqloflibrary/"/>
    <id>http://tenlee2012.github.io/2015/12/11/sqloflibrary/</id>
    <published>2015-12-11T06:02:17.000Z</published>
    <updated>2016-03-03T15:23:44.213Z</updated>
    <content type="html"><![CDATA[<p>最近.Net课程需要做一个简单的图书管理系统。<br>于是就把这个简单的数据库设计放了上来，用于备忘。<br><a id="more"></a></p>
<h3 id="表的设计及字段说明">表的设计及字段说明</h3><h5 id="lib_user">lib_user</h5><table>
<thead>
<tr>
<th>字段</th>
<th style="text-align:center">数据类型</th>
<th style="text-align:right">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>userid</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">主键,学号,可用于登录</td>
</tr>
<tr>
<td>userpassword</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">密码</td>
</tr>
<tr>
<td>username</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">用户姓名</td>
</tr>
<tr>
<td>userredp</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">院系</td>
</tr>
</tbody>
</table>
<p>其他自己扩展</p>
<h5 id="lib_book">lib_book</h5><table>
<thead>
<tr>
<th>字段</th>
<th style="text-align:center">数据类型</th>
<th style="text-align:right">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>bookid</td>
<td style="text-align:center">int</td>
<td style="text-align:right">自增主键</td>
</tr>
<tr>
<td>bookname</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">xx</td>
</tr>
<tr>
<td>bookname</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">xx</td>
</tr>
<tr>
<td>bookname</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">xx</td>
</tr>
<tr>
<td>bookname</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">xx</td>
</tr>
<tr>
<td>bookname</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">xx</td>
</tr>
</tbody>
</table>
<p>其他自己扩展</p>
<h5 id="lib_book_borrow">lib_book_borrow</h5><table>
<thead>
<tr>
<th>字段</th>
<th style="text-align:center">数据类型</th>
<th style="text-align:right">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>borid</td>
<td style="text-align:center">int</td>
<td style="text-align:right">自增主键</td>
</tr>
<tr>
<td>bookid</td>
<td style="text-align:center">int</td>
<td style="text-align:right">lib_book外键</td>
</tr>
<tr>
<td>userid</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">lib_user外键</td>
</tr>
<tr>
<td>bordate</td>
<td style="text-align:center">date</td>
<td style="text-align:right">借阅日期</td>
</tr>
<tr>
<td>retdate</td>
<td style="text-align:center">date</td>
<td style="text-align:right">还书日期</td>
</tr>
<tr>
<td>borstate</td>
<td style="text-align:center">int</td>
<td style="text-align:right">借阅状态(正在借阅,已经还书,续借,已经过期)</td>
</tr>
</tbody>
</table>
<h5 id="bookbag">bookbag</h5><table>
<thead>
<tr>
<th>字段</th>
<th style="text-align:center">数据类型</th>
<th style="text-align:right">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>bookid</td>
<td style="text-align:center">int</td>
<td style="text-align:right">lib_book外键</td>
</tr>
<tr>
<td>usreid</td>
<td style="text-align:center">varchar(50)</td>
<td style="text-align:right">lib_user外键</td>
</tr>
</tbody>
</table>
<hr>
<h4 id="bookbag建表SQL语句">bookbag建表SQL语句</h4><p>其他类似,暂列一个<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE lib_borinfo</span><br><span class="line"><span class="list">(</span><br><span class="line"><span class="keyword">userid</span> varchar<span class="list">(<span class="number">50</span>)</span><span class="comment">;</span></span><br><span class="line">bookid int<span class="comment">;</span></span><br><span class="line">FOREIGN KEY <span class="list">(<span class="keyword">userid</span>)</span> REFERENCES lib_user<span class="list">(<span class="keyword">userid</span>)</span><span class="comment">;</span></span><br><span class="line">FOREIGN KEY <span class="list">(<span class="keyword">bookid</span>)</span> REFERENCES lib_book<span class="list">(<span class="keyword">bookid</span>)</span><span class="comment">;</span></span><br><span class="line">ADD CONSTRAINT unique_bor_book UNIQUE <span class="list">(<span class="keyword">userid</span>,bookid)</span><span class="comment">;</span></span><br><span class="line">)</span></span><br></pre></td></tr></table></figure></p>
<h4 id="用户登录验证SQL语句">用户登录验证SQL语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> lib_user <span class="keyword">where</span>(userid=@userid, userpassword=@<span class="keyword">password</span>)</span></span><br></pre></td></tr></table></figure>
<h4 id="用户密码变更SQL语句">用户密码变更SQL语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">update</span> lib_user <span class="keyword">set</span> userpassword=@<span class="keyword">password</span></span></span><br></pre></td></tr></table></figure>
<h4 id="图书检索SQL语句">图书检索SQL语句</h4><p>暂且列一个以图书名搜索的,其他类似<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> lib_user <span class="keyword">where</span>(bookname=@bookname);</span></span><br></pre></td></tr></table></figure></p>
<h4 id="添加到书包SQL语句">添加到书包SQL语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">use</span> library;</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> bookbag(userid, bookid) <span class="keyword">values</span> (@userid, @bookid);</span></span><br></pre></td></tr></table></figure>
<h4 id="书包查询SQL语句">书包查询SQL语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">use</span> library;</span></span><br><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> lib_book <span class="keyword">where</span></span><br><span class="line">(bookid <span class="keyword">in</span> (<span class="keyword">select</span> bookid <span class="keyword">from</span> bookbag <span class="keyword">where</span> userid=@userid));</span></span><br></pre></td></tr></table></figure>
<h4 id="从书包删除">从书包删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">use</span> library;</span></span><br><span class="line"><span class="operator"><span class="keyword">delete</span> <span class="keyword">from</span> bookbag(userid, bookid) <span class="keyword">values</span> (@userid, @bookid);</span></span><br></pre></td></tr></table></figure>
<h4 id="借阅图书">借阅图书</h4><p>因为书可能是一起借,但是不一定同时还啊,所以必须一本书,对应一个borid.<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">use</span> library;</span><br><span class="line"><span class="title">insert</span> into lib_borrow(borid,bookid,userid,bordate,retdate,borstate) </span><br><span class="line">values (<span class="variable">@borid</span>, <span class="variable">@bookid</span>,<span class="variable">@userid</span>,<span class="variable">@bordate</span>,<span class="variable">@retdate</span>,<span class="variable">@borstate</span>);</span><br></pre></td></tr></table></figure></p>
<p>每借阅一本图书,lib_book里面数量减一的触发器<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">trigger</span> BookDec1</span><br><span class="line"><span class="keyword">on</span> lib_borrow</span><br><span class="line"><span class="keyword">after</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">update</span> lib_book <span class="keyword">set</span> bookres=bookres-<span class="number">1</span></span><br><span class="line"><span class="keyword">from</span> lib_book, inserted</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">lib_book.bookid=inserted.bookid;</span></span><br></pre></td></tr></table></figure></p>
<p>每借阅一本图书,相应的从bookbag里面删除的触发器<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">trigger</span> BookbagDel</span><br><span class="line"><span class="keyword">on</span> lib_borrow</span><br><span class="line"><span class="keyword">after</span> <span class="keyword">insert</span> </span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">delete</span> bookbag</span><br><span class="line"><span class="keyword">where</span> bookid <span class="keyword">in</span> (<span class="keyword">select</span> bookid <span class="keyword">from</span> inserted)</span><br><span class="line"><span class="keyword">and</span> userid <span class="keyword">in</span> (<span class="keyword">select</span> userid <span class="keyword">from</span> inserted);</span></span><br></pre></td></tr></table></figure></p>
<h4 id="还书SQL语句">还书SQL语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">use</span> library;</span></span><br><span class="line"><span class="operator"><span class="keyword">update</span> lib_borrow <span class="keyword">set</span> retdate=@<span class="built_in">date</span>, borstate=<span class="string">'1'</span> <span class="keyword">where</span> borid=@borid;</span></span><br></pre></td></tr></table></figure>
<p>lib_book表加一的触发器<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">trigger</span> BookbagDel</span><br><span class="line"><span class="keyword">on</span> lib_borrow</span><br><span class="line"><span class="keyword">after</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">update</span> lib_book <span class="keyword">set</span> bookres=bookres+<span class="number">1</span></span><br><span class="line"><span class="keyword">from</span> lib_book, inserted</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">lib_book.bookid=inserted.bookid;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="当前借阅信息查询SQL语句">当前借阅信息查询SQL语句</h4><p>多表查询<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">use</span> library;</span></span><br><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> lib_borrow </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> lib_book <span class="keyword">on</span> lib_book.bookid=lib_borrow.bookid</span><br><span class="line"><span class="keyword">where</span> lib_borrow.userid=@userid <span class="keyword">and</span> lib_borrow.borstate=<span class="number">0</span>;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="历史借阅信息查询SQL语句">历史借阅信息查询SQL语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">use</span> library;</span></span><br><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> lib_borrow </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> lib_book <span class="keyword">on</span> lib_book.bookid=lib_borrow.bookid</span><br><span class="line"><span class="keyword">where</span> lib_borrow.userid=@userid <span class="keyword">and</span> lib_borrow.borstate=<span class="number">1</span>;</span></span><br></pre></td></tr></table></figure>
<h3 id="图书借阅排行榜">图书借阅排行榜</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span></span><br><span class="line">(<span class="keyword">select</span> bookid, bor_sum=<span class="keyword">COUNT</span>(lib_borrow.bookid) </span><br><span class="line"><span class="keyword">from</span> lib_borrow <span class="keyword">group</span> <span class="keyword">by</span> lib_borrow.bookid) <span class="keyword">as</span> A</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> * <span class="keyword">from</span> lib_book) <span class="keyword">as</span> B </span><br><span class="line"><span class="keyword">on</span> A.bookid = B.bookid </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> A.bor_sum <span class="keyword">desc</span></span></span><br></pre></td></tr></table></figure>
<h3 id="用户图书借阅排行榜">用户图书借阅排行榜</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> userid, user_sum=<span class="keyword">COUNT</span>(lib_borrow.userid)</span><br><span class="line"><span class="keyword">from</span> lib_borrow <span class="keyword">group</span> <span class="keyword">by</span> lib_borrow.userid) <span class="keyword">as</span> A</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> userid1=userid,username,usersex,userredp <span class="keyword">from</span> lib_user) <span class="keyword">as</span> B </span><br><span class="line"><span class="keyword">on</span> A.userid = B.userid1 <span class="keyword">order</span> <span class="keyword">by</span> A.user_sum <span class="keyword">desc</span> ;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近.Net课程需要做一个简单的图书管理系统。<br>于是就把这个简单的数据库设计放了上来，用于备忘。<br>]]>
    
    </summary>
    
      <category term="SQL" scheme="http://tenlee2012.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[VMware虚拟机下为Linux内核增加系统调用]]></title>
    <link href="http://tenlee2012.github.io/2015/11/15/Linuxaddsyscall/"/>
    <id>http://tenlee2012.github.io/2015/11/15/Linuxaddsyscall/</id>
    <published>2015-11-15T07:45:17.000Z</published>
    <updated>2016-03-03T15:19:42.597Z</updated>
    <content type="html"><![CDATA[<p><strong><a href="http://tenlee.info/2015/11/15/Linuxaddsyscall/" target="_blank" rel="external">http://tenlee.info/2015/11/15/Linuxaddsyscall/</a></strong></p>
<h3 id="第一步：">第一步：</h3><p>去此网址  <a href="http://www.kernel.org/" target="_blank" rel="external">http://www.kernel.org/</a> 下载自己想要的内核源码，建议3.10.93，本人下载的就是3.10.93，测试成功</p>
<p>Ubuntu安装menuconfig，如下命令复制到终端<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install libncurses5-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="第二步：">第二步：</h3><p>将下载好的tar.xz压缩包解压到 /usr/src/文件夹下，在终端输入如下命令<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -xvf linux-<span class="number">3.10</span>.<span class="number">93</span><span class="class">.tar</span><span class="class">.xz</span> -C /usr/src/</span><br></pre></td></tr></table></figure></p>
<p>并进入该文件夹，如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/src/linux-<span class="number">3.10</span>.<span class="number">93</span></span><br></pre></td></tr></table></figure></p>
<h3 id="第三步：">第三步：</h3><p>将原来的配置文件拷过来,<br>先到<code>/usr/src/linux-3.10.93</code>文件夹底下<br><code>cd /usr/src/linux-3.10.93</code><br>由于我当前的Ubuntu内核版本是3.19.0.25，所以我的配置文件是 <code>/usr/src/linux-headers-3.19.0-25-generic/.config</code> 这个文件，你的对应的只是不同的版本号</p>
<p><code>uname -a</code>查看当前系统内核。我在终端执行如下命令：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp <span class="regexp">/usr/</span>src<span class="regexp">/linux-headers-3.19.0-25-generic/</span>.config .config</span><br></pre></td></tr></table></figure>
<h3 id="第四步：">第四步：</h3><p>改内核的系统调用库函数，进入arch/x86/syscalls文件夹(因为我是32位，所以进入x86)，修改syscall_32.tbl，<br>执行如下命令<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim <span class="regexp">/usr/</span>src<span class="regexp">/linux-3.10.93arch/</span>x86<span class="regexp">/syscalls/</span>syscall_32.tbl</span><br></pre></td></tr></table></figure></p>
<p>在最后一行添加自己的系统调用, 如下<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">351   i386   lsproc          sys_lsproc</span><br></pre></td></tr></table></figure></p>
<p><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115005403040-2104708170.png" alt=""></p>
<h3 id="第五步：">第五步：</h3><p>声明一下函数原型，在 syscall.h中<br><code>sudo vim include/linux/syscalls.h</code>，不懂vim的用<code>sudo gedit include/linux/syscalls.h</code></p>
<p>在最后添加 函数原型：<code>asmlinkage int sys_lsproc(int num);</code><br><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115005641025-170146994.png" alt=""></p>
<h3 id="第六步：">第六步：</h3><p>定义自己的系统调用函数, 进入 kernel 文件夹，执行命令 <code>sudo vim kernel/sys.c</code>，添加自己定义的函数<br><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115005809603-1519129048.png" alt=""></p>
<h3 id="第七步：配置内核，">第七步：配置内核，</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">make</span> menuconfig</span><br></pre></td></tr></table></figure>
<p>这个时候，终端的窗口最好最大化，否则可能会报错。<br><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115010040103-762537074.png" alt=""></p>
<p>选Load，然后Ok，然后Save。</p>
<p>依次执行如下命令，要慢慢等待。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> bzImage <span class="comment">//生成新内核</span></span><br><span class="line"><span class="built_in">make</span> modules <span class="comment">//编译模块 </span></span><br><span class="line"><span class="built_in">make</span> modules_install  <span class="comment">//安装模块</span></span><br><span class="line"><span class="built_in">make</span> install  <span class="comment">// 安装内核</span></span><br></pre></td></tr></table></figure></p>
<p>安装成功之后重启虚拟机，重启的时候按着ESC键（此时的鼠标应该定位在虚拟机里面），进入Ubuntu grub界面，选择Ubuntu高级选项，选择3.10内核<br><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115010329150-1973687166.png" alt=""><br><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115010422712-1273325430.png" alt=""></p>
<h3 id="第八步：">第八步：</h3><p>进入了3.10内核，编写 test.c文件，使用自己的系统调用，<br>小白 终端调用 输入命令    gedit test.c，写一下内容<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;linux/unistd.h&gt; </span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sys/syscall.h&gt; </span></span><br><span class="line"><span class="comment">//系统调用号根据实验具体 </span></span><br><span class="line"><span class="comment">//#define __NR_ mysyscall 223 </span></span><br><span class="line"><span class="comment">//数字而定 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span><br><span class="line"></span>&#123; </span><br><span class="line">    syscall(<span class="number">351</span>， <span class="number">1</span>)<span class="comment">//依次是调用号，参数</span></span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115010606275-272322633.png" alt=""></p>
<p>编译并运行。</p>
<p><img src="http://images2015.cnblogs.com/blog/743656/201511/743656-20151115010838790-2059428381.png" alt=""></p>
<p>输出成功，结束</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong><a href="http://tenlee.info/2015/11/15/Linuxaddsyscall/">http://tenlee.info/2015/11/15/Linuxaddsyscall/</a></strong></p>
<h3 id="第一步：">第一步：</h3><p>去此网址  <a href="http://www.kernel.org/">http://www.kernel.org/</a> 下载自己想要的内核源码，建议3.10.93，本人下载的就是3.10.93，测试成功</p>
<p>Ubuntu安装menuconfig，如下命令复制到终端<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install libncurses5-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://tenlee2012.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python3下Django链接Mysql]]></title>
    <link href="http://tenlee2012.github.io/2015/08/11/python3connectionmysql/"/>
    <id>http://tenlee2012.github.io/2015/08/11/python3connectionmysql/</id>
    <published>2015-08-11T12:11:17.000Z</published>
    <updated>2016-03-03T15:14:12.064Z</updated>
    <content type="html"><![CDATA[<h2 id="前提">前提</h2><h4 id="首先安装好Django">首先安装好Django</h4><h4 id="安装PyMySQL">安装PyMySQL</h4><p><code>pip-python3 install PyMySQL</code></p>
<ol>
<li><code>django-admin startproject project</code></li>
<li><code>`django-admin startapp app</code></li>
<li>修改项目目录下的 <code>settings.py</code></li>
</ol>
<a id="more"></a>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>, <span class="comment">#数据库引擎</span></span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'test'</span>,       <span class="comment">#数据库名</span></span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,       <span class="comment">#用户名</span></span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'root'</span>,   <span class="comment">#密码</span></span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">''</span>,           <span class="comment">#数据库主机，默认为localhost</span></span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">''</span>,           <span class="comment">#数据库端口，MySQL默认为3306</span></span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'autocommit'</span>: <span class="keyword">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li><p>修改项目目录的 <code>__init__.py</code>,添加如下</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">pymysql.<span class="function"><span class="title">install_as_MySQLdb</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试 进入<code>python manager.py shell</code></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from django<span class="class">.db</span> import connection</span><br><span class="line">&gt;&gt;&gt; <span class="attribute">cursor</span> = connection.<span class="function"><span class="title">cursor</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前提">前提</h2><h4 id="首先安装好Django">首先安装好Django</h4><h4 id="安装PyMySQL">安装PyMySQL</h4><p><code>pip-python3 install PyMySQL</code></p>
<ol>
<li><code>django-admin startproject project</code></li>
<li><code>`django-admin startapp app</code></li>
<li>修改项目目录下的 <code>settings.py</code></li>
</ol>]]>
    
    </summary>
    
      <category term="Python" scheme="http://tenlee2012.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python3实现HDUOJ模拟提交]]></title>
    <link href="http://tenlee2012.github.io/2015/08/06/Python3%E5%AE%9E%E7%8E%B0HDUOJ%E6%A8%A1%E6%8B%9F%E6%8F%90%E4%BA%A4/"/>
    <id>http://tenlee2012.github.io/2015/08/06/Python3实现HDUOJ模拟提交/</id>
    <published>2015-08-06T12:29:17.000Z</published>
    <updated>2016-03-03T15:11:08.647Z</updated>
    <content type="html"><![CDATA[<p>下午闲来无事,顺手一写</p>
<p>主要用到了 <a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="external">Requests</a> 模块实现模拟登陆,提交.有中文说明文档<br><a href="http://www.crummy.com/software/BeautifulSoup/bs3/documentation.zh.html" target="_blank" rel="external">Beautiful Soup</a>, 很强大的HTML/XML的解析器,没用上.<br>$Python大法好,不到50行即可搞定$</p>
<a id="more"></a>
<p>Python代码<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">import</span> requests, json</span><br><span class="line">from bs4 <span class="built_in">import</span> BeautifulSoup</span><br><span class="line"><span class="built_in">import</span> os</span><br><span class="line"><span class="built_in">import</span> os.path</span><br><span class="line"><span class="built_in">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="variable">sub_dir =</span> <span class="string">"/home/acm/Desktop/ACM_Code/HDUOJ/"</span> <span class="comment">#最后那个斜杠一定要加</span></span><br><span class="line"><span class="variable">uname =</span> input(<span class="string">"请输入用户名: "</span>)</span><br><span class="line"><span class="variable">upass =</span> input(<span class="string">"请输入密码: "</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取该目录下所有文件</span></span><br><span class="line"><span class="variable">all_file =</span> os.listdir(sub_dir)</span><br><span class="line"><span class="variable">login_url =</span> <span class="string">"http://acm.hdu.edu.cn/userloginex.php?action=login"</span></span><br><span class="line"><span class="variable">sub_url =</span> <span class="string">"http://acm.hdu.edu.cn/submit.php?action=submit"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">login_data =</span> &#123;'username': uname, <span class="string">"userpass"</span>: upass,</span><br><span class="line">        <span class="string">"login"</span>:<span class="string">"Sign In"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#保持会话</span></span><br><span class="line"><span class="variable">cookieJar =</span> requests.cookies.RequestsCookieJar()</span><br><span class="line"><span class="variable">session =</span> requests.Session()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#登陆</span></span><br><span class="line">    <span class="variable">login_resp =</span> session.request(<span class="string">"POST"</span>, login_url, </span><br><span class="line">            <span class="variable">cookies=</span>cookieJar, <span class="variable">data=</span>login_data) </span><br><span class="line"></span><br><span class="line">for fname <span class="keyword">in</span> all_file:</span><br><span class="line">    <span class="variable">proid =</span> int(fname[<span class="number">3</span>:<span class="number">7</span>])</span><br><span class="line">    <span class="variable">subcode =</span> open(sub_dir+fname).read()</span><br><span class="line">    print(<span class="string">"正在提交"</span> + str(proid))</span><br><span class="line"></span><br><span class="line">    <span class="variable">submit_data =</span> &#123;<span class="string">"check"</span>: <span class="number">0</span>, <span class="string">"problemid"</span>: proid, </span><br><span class="line">    <span class="string">"language"</span>: <span class="number">0</span>, <span class="string">"usercode"</span>:subcode&#125;</span><br><span class="line">    <span class="comment">#提交</span></span><br><span class="line">    <span class="variable">r =</span> session.request(<span class="string">"POST"</span>, sub_url, <span class="variable">cookies=</span>cookieJar, </span><br><span class="line">            <span class="variable">data=</span>submit_data)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"提交完成"</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>下午闲来无事,顺手一写</p>
<p>主要用到了 <a href="http://cn.python-requests.org/zh_CN/latest/">Requests</a> 模块实现模拟登陆,提交.有中文说明文档<br><a href="http://www.crummy.com/software/BeautifulSoup/bs3/documentation.zh.html">Beautiful Soup</a>, 很强大的HTML/XML的解析器,没用上.<br>$Python大法好,不到50行即可搞定$</p>]]>
    
    </summary>
    
      <category term="Python" scheme="http://tenlee2012.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[下载HDUOJ所有AC题目代码]]></title>
    <link href="http://tenlee2012.github.io/2015/08/05/downloadhuojacceptcode/"/>
    <id>http://tenlee2012.github.io/2015/08/05/downloadhuojacceptcode/</id>
    <published>2015-08-05T10:53:17.000Z</published>
    <updated>2016-03-03T15:12:09.412Z</updated>
    <content type="html"><![CDATA[<p>通过对杭电OJ的观察,很容易找到规律,根据此规则写相应的代码.<br><a href="http://requests-docs-cn.readthedocs.org/zh_CN/latest/user/advanced.html" target="_blank" rel="external">Requests</a> 实现模拟登陆<br>需要用 <a href="http://beautifulsoup.readthedocs.org/zh_CN/latest/" target="_blank" rel="external">BeautifulSoup</a> 处理 status 页面的表格, 获得runid,problemid,代码链接,其实runid就是代码链接</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup </span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveFile</span><span class="params">(data, fname = <span class="string">"temp.html"</span>)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(fname, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(data)</span><br><span class="line">        print(fname + <span class="string">'保存成功'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCode</span><span class="params">(codeurl, proid)</span>:</span></span><br><span class="line">    url = hdu_url + codeurl</span><br><span class="line">    code_html = session.get(url, cookies=cookieJar)</span><br><span class="line">    code_html.encoding = <span class="string">'gb2312'</span></span><br><span class="line">    data = code_html.text</span><br><span class="line">    soup = BeautifulSoup(data) <span class="comment">#初始化</span></span><br><span class="line">    code = soup.textarea.text <span class="comment">#代码区域的标签tag</span></span><br><span class="line">    saveFile(code, <span class="string">'HDU'</span>+proid + <span class="string">'.cpp'</span>) <span class="comment">#保存路径以及文件名,我的格式是当前目录,文件名规则为HDU1001.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStatus</span><span class="params">()</span>:</span></span><br><span class="line">    first = <span class="string">''</span></span><br><span class="line">    vis = set() <span class="comment">#标记是否保存过</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">        payload = &#123;<span class="string">'first'</span>:first, <span class="string">"user"</span>:uname, <span class="string">"pid"</span>:<span class="string">""</span>, <span class="string">"lang"</span>:<span class="string">""</span>, <span class="string">"status"</span>:<span class="number">5</span>&#125;</span><br><span class="line">        status_html = session.get(status_url, cookies=cookieJar, params=payload)</span><br><span class="line">        print(status_html.url)</span><br><span class="line">        status_html.encoding = <span class="string">'gb2312'</span> <span class="comment">#设置编码</span></span><br><span class="line">        data = status_html.text <span class="comment">#转换成str</span></span><br><span class="line">        soup = BeautifulSoup(data) <span class="comment">#初始化</span></span><br><span class="line">        runid = <span class="string">""</span> <span class="comment">#每次将first初始化为空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> table <span class="keyword">in</span> soup.findAll(<span class="string">'table'</span>):</span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> table.findAll(<span class="string">'tr'</span>):</span><br><span class="line">                i = <span class="number">100</span></span><br><span class="line">                <span class="keyword">for</span> tr <span class="keyword">in</span> row.findAll(<span class="string">'td'</span>):</span><br><span class="line">                    <span class="keyword">if</span>(len(tr.text) == <span class="number">8</span> <span class="keyword">and</span> <span class="string">'1'</span> <span class="keyword">in</span> tr.text): <span class="comment">#找到RunId</span></span><br><span class="line">                        runid = tr.text</span><br><span class="line">                        i = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">if</span>(i == <span class="number">3</span>):</span><br><span class="line">                        proid = tr.text</span><br><span class="line">                        <span class="keyword">if</span>(proid <span class="keyword">in</span> vis):</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            vis |= &#123;proid&#125; <span class="comment">#保存过的代码,不再重新保存,节省时间</span></span><br><span class="line">                    <span class="keyword">if</span>(i == <span class="number">6</span>):</span><br><span class="line">                        getCode(tr.a.get(<span class="string">'href'</span>), proid) <span class="comment">#获取到代码的链接,保存代码</span></span><br><span class="line">                        time.sleep(<span class="number">1</span>) <span class="comment">#休眠一秒,不然服务器反应不过来</span></span><br><span class="line">                    i += <span class="number">1</span>      </span><br><span class="line">        <span class="keyword">if</span>(runid == <span class="string">''</span>): <span class="comment">#本页没有runid, 说明是最后一页</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        first = str(int(runid)-<span class="number">1</span>) <span class="comment">#下一页 是以本页最后一个Runid - 1,规律</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uname = input(<span class="string">"请输入用户名: "</span>)</span><br><span class="line">upass = input(<span class="string">"请输入密码: "</span>)</span><br><span class="line"></span><br><span class="line">hdu_url = <span class="string">"http://acm.hdu.edu.cn/"</span></span><br><span class="line">login_url = hdu_url + <span class="string">"userloginex.php?action=login"</span></span><br><span class="line">status_url = hdu_url + <span class="string">"status.php"</span></span><br><span class="line"></span><br><span class="line">login_data = &#123;<span class="string">'username'</span>: uname, <span class="string">"userpass"</span>: upass,</span><br><span class="line">        <span class="string">"login"</span>:<span class="string">"Sign In"</span>&#125;</span><br><span class="line"><span class="comment">#保持会话</span></span><br><span class="line">cookieJar = requests.cookies.RequestsCookieJar()</span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="comment">#登陆</span></span><br><span class="line">login_resp = session.request(<span class="string">"POST"</span>, login_url, </span><br><span class="line">        cookies=cookieJar, data=login_data)</span><br><span class="line"></span><br><span class="line">getStatus()</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>通过对杭电OJ的观察,很容易找到规律,根据此规则写相应的代码.<br><a href="http://requests-docs-cn.readthedocs.org/zh_CN/latest/user/advanced.html">Requests</a> 实现模拟登陆<br>需要用 <a href="http://beautifulsoup.readthedocs.org/zh_CN/latest/">BeautifulSoup</a> 处理 status 页面的表格, 获得runid,problemid,代码链接,其实runid就是代码链接</p>]]>
    
    </summary>
    
      <category term="Python" scheme="http://tenlee2012.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5328 Problem Killer(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/31/HDU5328/"/>
    <id>http://tenlee2012.github.io/2015/07/31/HDU5328/</id>
    <published>2015-07-31T11:00:00.000Z</published>
    <updated>2015-07-31T11:39:10.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接">题目链接</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5328" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>一个序列 $a$, 求这个序列的 连续子序列 中最长的等差序列或者等比序列<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p><code>2</code> // T<br><code>5</code> //n<br><code>1 2 3 4 6</code> //n个数, 1,2,3,4是最长等差序列,长度为4<br><code>10</code> //n<br><code>1 1 1 1 1 1 2 3 4 5</code> //前6个1满足等差(比)序列,且长度最长是6</p>
<h3 id="解题思路">解题思路</h3><p>暴力查询即可<br>此题坑点: 等比序列 的 公比 可能时 分数.</p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> ap = a[<span class="number">1</span>] - a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">double</span> gp = a[<span class="number">1</span>] / a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> len1 = <span class="number">1</span>, len2 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> malen1 = <span class="number">1</span>, malen2 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i] - a[i-<span class="number">1</span>] - ap) &lt; eps) len1++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ap = a[i] - a[i-<span class="number">1</span>];</span><br><span class="line">                len1 = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            malen1 = (malen1 &gt; len1 ? malen1 : len1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i] / a[i-<span class="number">1</span>] - gp) &lt; eps) len2++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                gp = a[i] / a[i-<span class="number">1</span>];</span><br><span class="line">                len2 = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            malen2 = (malen2 &gt; len2 ? malen2 : len2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, malen1 &gt; malen2 ? malen1 : malen2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接">题目链接</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5328">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>一个序列 $a$, 求这个序列的 连续子序列 中最长的等差序列或者等比序列<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5335 Walk Out(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/31/HDU5335/"/>
    <id>http://tenlee2012.github.io/2015/07/31/HDU5335/</id>
    <published>2015-07-31T09:27:00.000Z</published>
    <updated>2015-07-31T11:40:51.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接">题目链接</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5335" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>$m * n$的矩阵，每个格子是<code>0</code>或者<code>1</code>，探险家初始位置是$(1, 1)$，终点位置是$(n, m)$,且只能向 上下左右四个方向走,因为从 起点到终点 所走的路径是由<code>01</code>构成的,故可表示成二进制数,要求寻找一条路径表示的二进制数最小.<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p><code>2</code>  //T 两组测试样例<br><code>2 2</code> // n,m, 行 列<br><code>11</code> //第一行<br><code>11</code> //第二行 路径为$(1,1)-&gt;(1,2)-&gt;(2,2)$(也可以是其他),故为<code>111</code><br><code>3 3</code> //n, m<br><code>001</code><br><code>111</code><br><code>101</code> //路径为$(1,1)-&gt;(1,2)-&gt;(2,2)-&gt;(3-&gt;2)-&gt;(3,3)$故为00101,即101</p>
<h3 id="解题思路">解题思路</h3><p>因为是二进制,所以要尽可能的走0,走0走的离终点越近越好.</p>
<ul>
<li>第一步: 一直走<code>0</code>,走到不能走0为止,从这些0中挑出来所有距离终点 曼哈顿距离最小的</li>
<li>第二步: 从第一步挑出来的 0 为起点 搜索,且只搜<code>右</code>和<code>下</code>两个方向遍历每一层,如果该层有 0 必然选择 0,并把 0 加入队列,如果该层只有 1 ,则把所有的 1 都加入队列,依次遍历下一层.</li>
</ul>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> MOVE[<span class="number">4</span>][<span class="number">2</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">struct</span> Point</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;p[maxn];</span><br><span class="line"><span class="keyword">int</span> vis[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> g[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> ans[maxn*<span class="number">4</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;Point&gt; q;</span><br><span class="line"><span class="built_in">queue</span>&lt;Point&gt; q1;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span> || x &gt;= n || y &lt; <span class="number">0</span> || y &gt;= m) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line">    <span class="keyword">int</span> xx, yy;</span><br><span class="line">    <span class="keyword">int</span> dis = m+n-<span class="number">2</span>;</span><br><span class="line">    Point s, now, next;</span><br><span class="line">    s.x = x; s.y = x; s.step = <span class="number">0</span>;</span><br><span class="line">    q.push(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty() &amp;&amp; g[x][y] == <span class="string">'0'</span>) <span class="comment">//开始一直走0</span></span><br><span class="line">    &#123;</span><br><span class="line">        now = q.front(); q.pop();</span><br><span class="line">        q1.push(now);</span><br><span class="line">        <span class="keyword">if</span>(n-<span class="number">1</span>-now.x+m-<span class="number">1</span>-now.y &lt; dis) <span class="comment">//寻找离终点最近的 0 点 的距离</span></span><br><span class="line">        &#123;</span><br><span class="line">            dis = n-<span class="number">1</span>-now.x+m-<span class="number">1</span>-now.y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            xx = now.x + MOVE[i][<span class="number">0</span>];</span><br><span class="line">            yy = now.y + MOVE[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(!judge(xx, yy)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(g[xx][yy] == <span class="string">'1'</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(vis[xx][yy]) <span class="keyword">continue</span>;</span><br><span class="line">            vis[xx][yy] = <span class="number">1</span>;</span><br><span class="line">            next.x = xx; next.y = yy;</span><br><span class="line">            next.step = now.step + <span class="number">1</span>;</span><br><span class="line">            q.push(next);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//q已空</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q1.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        now = q1.front(); q1.pop();</span><br><span class="line">        <span class="keyword">if</span>(n-<span class="number">1</span>-now.x+m-<span class="number">1</span>-now.y == dis) <span class="comment">//把到终点的距离等于dis的0点加入队列</span></span><br><span class="line">        &#123;</span><br><span class="line">            q.push(now);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="comment">//q1 已空</span></span><br><span class="line">    <span class="keyword">if</span>(dis == <span class="number">0</span>) <span class="comment">//此时说明可以直接走0到终点</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans[<span class="number">0</span>] = <span class="string">'0'</span>;</span><br><span class="line">        ans[<span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>; <span class="comment">// 所走的路径</span></span><br><span class="line">    <span class="keyword">char</span> flag = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">if</span>(dis == n+m-<span class="number">2</span>) ans[t++] = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="string">'1'</span>;</span><br><span class="line">        <span class="keyword">while</span>(!q.empty()) <span class="comment">//属于同一层的都找出来</span></span><br><span class="line">        &#123;</span><br><span class="line">            now = q.front(); q.pop();</span><br><span class="line">            <span class="comment">//printf("x = %d, y = %d, step = %d\n", now.x, now.y, now.step);</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                xx = now.x + MOVE[i][<span class="number">0</span>];</span><br><span class="line">                yy = now.y + MOVE[i][<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span>(!judge(xx, yy) || vis[xx][yy]) <span class="keyword">continue</span>;</span><br><span class="line">                vis[xx][yy] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(g[xx][yy] == <span class="string">'0'</span>) flag = <span class="string">'0'</span>; <span class="comment">//如果该层有0,则把0都挑出来作为下一步</span></span><br><span class="line">                next.x = xx; next.y = yy; next.step = now.step + <span class="number">1</span>;</span><br><span class="line">                q1.push(next);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!q1.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            now = q1.front(); q1.pop();</span><br><span class="line">            <span class="keyword">if</span>(now.x == n-<span class="number">1</span> &amp;&amp; now.y == m-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[t++] = g[n-<span class="number">1</span>][m-<span class="number">1</span>];</span><br><span class="line">                ans[t] = <span class="string">'\0'</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(g[now.x][now.y] == flag)<span class="comment">//如果该层有0,则把0都挑出来作为下一步</span></span><br><span class="line">            &#123;</span><br><span class="line">                q.push(now);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[t++] = flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        clc(vis, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, g[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span> &amp;&amp; m == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(g[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        BFS(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接">题目链接</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5335">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>$m * n$的矩阵，每个格子是<code>0</code>或者<code>1</code>，探险家初始位置是$(1, 1)$，终点位置是$(n, m)$,且只能向 上下左右四个方向走,因为从 起点到终点 所走的路径是由<code>01</code>构成的,故可表示成二进制数,要求寻找一条路径表示的二进制数最小.<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5327 Olympiad(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/31/HDU5327/"/>
    <id>http://tenlee2012.github.io/2015/07/31/HDU5327/</id>
    <published>2015-07-31T08:00:00.000Z</published>
    <updated>2015-07-31T11:40:15.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接">题目链接</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5327" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>计算区间 $L R$内每个数的 每位 是由不同的数 构成的 个数<br>即 一个区间内的每个数 它的个位,十位…..是不同的数字构成的个数<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p>略</p>
<h3 id="解题思路">解题思路</h3><p>简单题. 但是暴力枚举肯定会超时的.但是比赛的时候数据比较弱,可以水过去…..<br>可以先预处理每一个前缀有多少个即可</p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn], ha[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> n)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    clc(ha, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        x = n % <span class="number">10</span>;</span><br><span class="line">        n = n / <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(ha[x]) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">else</span> ha[x] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    clc(b, <span class="number">0</span>);</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = a[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(judge(i))</span><br><span class="line">        &#123;</span><br><span class="line">            b[i] = <span class="number">1</span>;</span><br><span class="line">            a[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">int</span> x, y, ans;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">        ans = a[y] - a[x];</span><br><span class="line">        <span class="keyword">if</span>(b[x]) </span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            <span class="comment">//puts("hehe");</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接">题目链接</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5327">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>计算区间 $L R$内每个数的 每位 是由不同的数 构成的 个数<br>即 一个区间内的每个数 它的个位,十位…..是不同的数字构成的个数<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5316 Magician(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/29/HDU5316/"/>
    <id>http://tenlee2012.github.io/2015/07/29/HDU5316/</id>
    <published>2015-07-29T08:47:00.000Z</published>
    <updated>2015-07-29T12:14:57.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5316" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>一段序列 $n$个数$(n&lt;=10^5)$，这 $n$个数的范围是$-10^9 &lt;= a_i &lt;= 10^9$，有两种操作， <code>0 L R</code>代表 L R 这个区间 <code>beautiful subsequence</code> 的最大和。 <code>1 a b</code>代表修改 a位置的数为b<br><code>beautiful subsequence</code> 的意思是<strong>下标奇偶相互交错的序列</strong><br>例如 ${4, 7, 9, 2}$ 这个序列，<code>beautiful subsequence</code>有<br>${4}$ ${7}$ ${9}$ ${2}$<br>${4, 7}$ ${7, 9}$ ${9, 2}$ ${4, 2}$<br>${4, 7, 9}$ ${7, 9, 2}$<br>${4, 7, 9, 2}$<br><a id="more"></a></p>
<h3 id="样例解释:">样例解释:</h3><p>略</p>
<h3 id="解题思路：">解题思路：</h3><p><code>j</code>代表奇数，<code>o</code>代表偶数<br>奇偶交错的序列有 4 种情况。开始和结尾 分别为 $jj, jo, oo, oj$<br>故线段树内维护这四种情况的最大值即可。<br>更新即为普通的更新。</p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll inf = -<span class="number">10000000000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Sum</span><br><span class="line">&#123;</span><br><span class="line">    ll jo, jj, oo, oj;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> Tree</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    Sum s;</span><br><span class="line">&#125;tree[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">ll a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Sum <span class="title">getSum</span><span class="params">(Sum l, Sum r)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    Sum ss;</span><br><span class="line">    ss.jj = max(l.jj, r.jj); </span><br><span class="line">    ss.jj = max(ss.jj, l.jj+r.oj);</span><br><span class="line">    ss.jj = max(ss.jj, l.jo+r.jj);</span><br><span class="line"></span><br><span class="line">    ss.jo = max(l.jo, r.jo);</span><br><span class="line">    ss.jo = max(ss.jo, l.jj+r.oo);</span><br><span class="line">    ss.jo = max(ss.jo, l.jo+r.jo);</span><br><span class="line"></span><br><span class="line">    ss.oo = max(l.oo, r.oo); </span><br><span class="line">    ss.oo = max(ss.oo, l.oj+r.oo);</span><br><span class="line">    ss.oo = max(ss.oo, l.oo+r.jo);</span><br><span class="line"></span><br><span class="line">    ss.oj = max(l.oj, r.oj);</span><br><span class="line">    ss.oj = max(ss.oj, l.oj+r.oj);</span><br><span class="line">    ss.oj = max(ss.oj, l.oo+r.jj);</span><br><span class="line">    <span class="keyword">return</span> ss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    tree[i].l = l;</span><br><span class="line">    tree[i].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(l%<span class="number">2</span>) <span class="comment">// j</span></span><br><span class="line">        &#123;</span><br><span class="line">            tree[i].s.jj = a[l]; tree[i].s.jo = inf; <span class="comment">//因为存在负数，故要初始化为负无穷</span></span><br><span class="line">            tree[i].s.oo = inf; tree[i].s.oj = inf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tree[i].s.jj = inf; tree[i].s.jo = inf;</span><br><span class="line">            tree[i].s.oo = a[l]; tree[i].s.oj = inf;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    Build(i&lt;&lt;<span class="number">1</span>, l, mid);</span><br><span class="line">    Build(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid+<span class="number">1</span>, r);</span><br><span class="line">    tree[i].s = getSum(tree[i&lt;&lt;<span class="number">1</span>].s, tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> id, ll val)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[i].l == id &amp;&amp; tree[i].r == id)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(id%<span class="number">2</span>) <span class="comment">// 奇</span></span><br><span class="line">        &#123;</span><br><span class="line">            tree[i].s.jj = val; tree[i].s.jo = inf;</span><br><span class="line">            tree[i].s.oo = inf; tree[i].s.oj = inf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">// 偶</span></span><br><span class="line">        &#123;</span><br><span class="line">            tree[i].s.jj = inf; tree[i].s.jo = inf;</span><br><span class="line">            tree[i].s.oo = val; tree[i].s.oj = inf;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[i].l + tree[i].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(id &gt; mid) Update(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, id, val);</span><br><span class="line">    <span class="keyword">else</span> Update(i&lt;&lt;<span class="number">1</span>, id, val);</span><br><span class="line">    tree[i].s = getSum(tree[i&lt;&lt;<span class="number">1</span>].s, tree[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Sum <span class="title">Quary</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[i].l == l &amp;&amp; tree[i].r == r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> tree[i].s;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[i].l + tree[i].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r &lt;= mid) <span class="keyword">return</span> Quary(i&lt;&lt;<span class="number">1</span>, l, r);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(l &gt; mid) <span class="keyword">return</span> Quary(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, l, r);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span>(getSum(Quary(i&lt;&lt;<span class="number">1</span>, l, mid), Quary(i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid+<span class="number">1</span>, r))); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T, x, y, op;</span><br><span class="line">    Sum s;</span><br><span class="line">    ll sum = <span class="number">0</span>, v;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        Build(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;op);</span><br><span class="line">            <span class="keyword">if</span>(x &gt; y) swap(x, y);</span><br><span class="line">            <span class="keyword">if</span>(op == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x, &amp;y);</span><br><span class="line">                <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">puts</span>(<span class="string">"0"</span>);<span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                s = Quary(<span class="number">1</span>, x, y);</span><br><span class="line">                sum = max(s.jj, s.jo);</span><br><span class="line">                sum = max(sum, s.oo);</span><br><span class="line">                sum = max(sum, s.oj);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, sum);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d %lld"</span>, &amp;x, &amp;v);</span><br><span class="line">                Update(<span class="number">1</span>, x, v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5316">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>一段序列 $n$个数$(n&lt;=10^5)$，这 $n$个数的范围是$-10^9 &lt;= a_i &lt;= 10^9$，有两种操作， <code>0 L R</code>代表 L R 这个区间 <code>beautiful subsequence</code> 的最大和。 <code>1 a b</code>代表修改 a位置的数为b<br><code>beautiful subsequence</code> 的意思是<strong>下标奇偶相互交错的序列</strong><br>例如 ${4, 7, 9, 2}$ 这个序列，<code>beautiful subsequence</code>有<br>${4}$ ${7}$ ${9}$ ${2}$<br>${4, 7}$ ${7, 9}$ ${9, 2}$ ${4, 2}$<br>${4, 7, 9}$ ${7, 9, 2}$<br>${4, 7, 9, 2}$<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5323 Solve this interesting problem(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/29/HDU5323/"/>
    <id>http://tenlee2012.github.io/2015/07/29/HDU5323/</id>
    <published>2015-07-29T03:24:00.000Z</published>
    <updated>2015-07-29T12:43:49.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5323" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>$0….n$  建立线段树，问是否存在 区间为 L R 的 这个叶子节点，存在找到最小的$n$，不存在输出$-1$<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p><code>6 7</code> //线段树Build(0, 7)，刚好存在6 7这个叶子节点，故输出7<br><code>10 13</code> // 不存在<br><code>10 11</code> //同理</p>
<h3 id="解题思路">解题思路</h3><p>根据线段树 父亲节点的区间 和 孩子节点的 区间的关系，可得知 若孩子节点时<code>l，r</code>，则父亲节点有4种情况(见代码注释),依次枚举即可。<br>但要注意 剪枝。</p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> L, R, ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r &lt; l || r &lt; <span class="number">0</span> || l &lt; <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(r &gt; <span class="number">2</span>*R) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(ans != -<span class="number">1</span> &amp;&amp; r &gt;= ans) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = r;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//printf("l = %d, r = %d\n", l, r);</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="comment">// (x+r) / 2 + 1 = l x+r为偶数</span></span><br><span class="line">    x = (l - <span class="number">1</span>) * <span class="number">2</span> - r;</span><br><span class="line">    dfs(x, r);</span><br><span class="line">    <span class="comment">//(x+r-1) / 2 + 1 = l  x+r为奇数</span></span><br><span class="line">    x = (l - <span class="number">1</span>) * <span class="number">2</span> + <span class="number">1</span> - r;</span><br><span class="line">    dfs(x, r);</span><br><span class="line">    <span class="comment">//(l + y) / 2 = r</span></span><br><span class="line">    y = <span class="number">2</span> * r - l;</span><br><span class="line">    dfs(l, y);</span><br><span class="line">    <span class="comment">//(l + y - 1) / 2 = r</span></span><br><span class="line">    y = <span class="number">2</span> * r + <span class="number">1</span> - l;</span><br><span class="line">    dfs(l, y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;L, &amp;R))</span><br><span class="line">    &#123;</span><br><span class="line">        ans = -<span class="number">1</span>;</span><br><span class="line">        dfs(L, R);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5323">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>$0….n$  建立线段树，问是否存在 区间为 L R 的 这个叶子节点，存在找到最小的$n$，不存在输出$-1$<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5319 Painter(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/28/HDU5319/"/>
    <id>http://tenlee2012.github.io/2015/07/28/HDU5319/</id>
    <published>2015-07-28T12:24:00.000Z</published>
    <updated>2015-07-29T12:15:09.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5319" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>一个画笔在画板作画。画笔有两种颜色，且只有两种画法，<code>\</code> 和 <code>/</code>,<code>\</code>即沿着对角线的方向，同理。<code>\</code>只能是红色 R，<code>/</code>只能是蓝色 B。如果一个格子被B R个染一次，就变成绿色 G 。给一个最终状态的画布，求用最少几笔可以到达该最终状态。<br>每个格子只能被相同颜色染一次，画家可以选择任意起点作为画笔起点。<br>每一笔都是连续的。<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p><code>2</code><br><code>4</code><br><code>RR.B</code><br><code>.RG.</code><br><code>.BRR</code><br><code>B..R</code></p>
<h3 id="解题思路">解题思路</h3><p>简单题。以每个G为起点，<code>/</code>和<code>\</code>各扫一次，最后在扫描有多少连续的<code>\</code> R和<code>/</code> B</p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> movex[<span class="number">2</span>][<span class="number">2</span>] = &#123;-<span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> movey[<span class="number">2</span>][<span class="number">2</span>] = &#123;-<span class="number">1</span>, <span class="number">1</span>,  <span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, g[maxn][maxn], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">1</span> || y &gt; m) <span class="keyword">return</span>  <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findx</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = x, b = y;</span><br><span class="line">    g[x][y] -= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(judge(a, b))</span><br><span class="line">    &#123;</span><br><span class="line">        a += movex[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        b += movex[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(g[a][b] == <span class="number">2</span> || g[a][b] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        g[a][b] -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a = x, b = y;</span><br><span class="line">    <span class="keyword">while</span>(judge(a, b))</span><br><span class="line">    &#123;</span><br><span class="line">        a += movex[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        b += movex[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(g[a][b] == <span class="number">2</span> || g[a][b] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        g[a][b] -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findy</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    g[x][y] -= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> a = x, b = y;</span><br><span class="line">    <span class="keyword">while</span>(judge(a, b))</span><br><span class="line">    &#123;</span><br><span class="line">        a += movey[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        b += movey[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(g[a][b]  == <span class="number">1</span> || g[a][b] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        g[a][b] -= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a = x, b = y;</span><br><span class="line">    <span class="keyword">while</span>(judge(a, b))</span><br><span class="line">    &#123;</span><br><span class="line">        a += movey[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        b += movey[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(g[a][b]  == <span class="number">1</span> || g[a][b] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        g[a][b] -= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, g[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"#####"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("1.in", "r", stdin);</span></span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">char</span> col[maxn];</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        clc(g, <span class="number">0</span>);</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">" %s"</span>, col);</span><br><span class="line">            m = <span class="built_in">strlen</span>(col);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; col[j]; j++)</span><br><span class="line">            &#123;   </span><br><span class="line">                ch = col[j];</span><br><span class="line">                <span class="keyword">if</span>(ch == <span class="string">'R'</span>) g[i][j+<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(ch == <span class="string">'B'</span>) g[i][j+<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(ch == <span class="string">'G'</span>) g[i][j+<span class="number">1</span>] = <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">if</span>(ch == <span class="string">'.'</span>) g[i][j+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Print();</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n ;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j] == <span class="number">3</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans += <span class="number">2</span>;</span><br><span class="line">                    findx(i, j);</span><br><span class="line">                    findy(i, j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Print();</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j] == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans++;</span><br><span class="line">                    findx(i, j);</span><br><span class="line">                    <span class="comment">//Print();</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j] == <span class="number">2</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    ans++;</span><br><span class="line">                    findy(i, j);</span><br><span class="line">                    <span class="comment">//Print();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Print();</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5319">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>一个画笔在画板作画。画笔有两种颜色，且只有两种画法，<code>\</code> 和 <code>/</code>,<code>\</code>即沿着对角线的方向，同理。<code>\</code>只能是红色 R，<code>/</code>只能是蓝色 B。如果一个格子被B R个染一次，就变成绿色 G 。给一个最终状态的画布，求用最少几笔可以到达该最终状态。<br>每个格子只能被相同颜色染一次，画家可以选择任意起点作为画笔起点。<br>每一笔都是连续的。<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5317 RGCDQ(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/28/HDU5317/"/>
    <id>http://tenlee2012.github.io/2015/07/28/HDU5317/</id>
    <published>2015-07-28T11:23:17.000Z</published>
    <updated>2015-07-29T12:15:03.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5317" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>函数 $F(x)$ = <strong>x 的素因子个数</strong>,给定一个区间 L，R 求 $max(GCD(F(i), F(j))$<br>其中$(L &lt;= i &lt; j &lt;= R)$,即区间内任意两个不相等的两个数的最大公约数的 最大值<br>数据范围 $2&lt;=L &lt; R&lt;=1000000$<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p><code>2</code> // T<br><code>2 3</code> //L=2， R=3，f(2)=1, f(3)=1，故答案为 1</p>
<h3 id="解题思路">解题思路</h3><p>因为R最大为$10^6$，且$2<em>3</em>5<em>7</em>11<em>13</em>17 = 510510 &lt; 10^6 &lt; 2<em>3</em>5<em>7</em>11<em>13</em>17*19$<br>所以一定存在 $f(x) &lt; 8$,$(2&lt;=x&lt;=10^6)$<br>f(x)很容易 求得<br>故只需要知道L R区间内有多少个 1,2…7 即可<br>可以 用<code>s[i][j]</code>保存前<code>i</code>个F中<code>j</code>的个数</p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> nu[maxn], s[maxn][<span class="number">10</span>], ha[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    clc(nu, <span class="number">0</span>);</span><br><span class="line">    clc(s, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(nu[i]) <span class="keyword">continue</span>;</span><br><span class="line">        nu[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>; j * i &lt; maxn; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            nu[j*i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    s[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; maxn; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">7</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            s[i][j] = s[i-<span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">        s[i][nu[i]]++;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y == <span class="number">0</span> ? x : GCD(y, x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l, r, T, k;</span><br><span class="line">    <span class="keyword">int</span> nlr[<span class="number">10</span>], a[<span class="number">20</span>];</span><br><span class="line">    Init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;l, &amp;r);</span><br><span class="line">        k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">7</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            nlr[i] = s[r][i] - s[l][i];</span><br><span class="line">            <span class="keyword">if</span>(i == nu[l] ) nlr[i]++;</span><br><span class="line">            <span class="comment">//printf("i = %d, %d\n", i, nlr[i]);</span></span><br><span class="line">            <span class="keyword">if</span>(nlr[i] &gt;= <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a[k++] = i; a[k++] = i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(nlr[i] == <span class="number">1</span>)a[k++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ma = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k-<span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; k; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                ma = max(GCD(a[i], a[j]), ma);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ma);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5317">戳我</a></p>
<h3 id="题目大意">题目大意</h3><p>函数 $F(x)$ = <strong>x 的素因子个数</strong>,给定一个区间 L，R 求 $max(GCD(F(i), F(j))$<br>其中$(L &lt;= i &lt; j &lt;= R)$,即区间内任意两个不相等的两个数的最大公约数的 最大值<br>数据范围 $2&lt;=L &lt; R&lt;=1000000$<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5308 I Wanna Become A 24-Point Master(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/25/HDU5308/"/>
    <id>http://tenlee2012.github.io/2015/07/25/HDU5308/</id>
    <published>2015-07-25T09:16:17.000Z</published>
    <updated>2015-07-29T12:14:24.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5308" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>给定一个n，则对应一个长度$2<em>n-1$数组，此数组前 $n$ 个数全为 $n$, 最后一个数必须是24，即 第 2</em>n-1 个数是24。<br>通过把这n个数加减乘除，每个数都必须用一次，且只能一次，并且运算完的数也都得用一次。也就是做n-1次。<br>输出过程 xi ? xj  第 i 个数与第 j 个数做 ? 运算 这种形式<br><a id="more"></a></p>
<h3 id="样例解释：">样例解释：</h3><p><code>4</code>       n = 4 即$a<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5308" target="_blank" rel="external">1</a>=4,a<a href="http://files.cnblogs.com/files/tenlee/2009.ico" target="_blank" rel="external">2</a>=4,a[3]=4,a[4]=4$<br><code>1 * 2</code>   表示 $a[5] = a<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5308" target="_blank" rel="external">1</a> * a<a href="http://files.cnblogs.com/files/tenlee/2009.ico" target="_blank" rel="external">2</a> = 16$<br><code>5 + 3</code>   表示 $a[6] = a[5] + a[3] = 20$<br><code>6 + 4</code>   表示 $a[7] = a[6] + a[4] = 24$<br>每个数都用了一次，且是 n - 1 次运算，每次运算的数均用上了</p>
<h3 id="解题思路：">解题思路：</h3><p>官方题解：<br><img src="http://files.cnblogs.com/files/tenlee/2009.ico" alt="此处输入图片的描述"></p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n15</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>, n+i, i+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d / 4\n"</span>, n+<span class="number">2</span>); <span class="comment">//n+3 = 3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"5 + 6\n"</span>); <span class="comment">// n + 4</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">7</span>;i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>, i, n+i-<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d / %d\n"</span>, n+<span class="number">10</span>, <span class="number">13</span>); <span class="comment">//n+11  8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>, n+<span class="number">3</span>, n+<span class="number">11</span>); <span class="comment">//n+12 3*8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"14 - 15\n"</span>);<span class="comment">//n+13</span></span><br><span class="line">    <span class="keyword">for</span>(i = n+<span class="number">14</span>; i &lt;= <span class="number">2</span>*n-<span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>, i-n+<span class="number">2</span>, i-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>, n+<span class="number">12</span>, <span class="number">2</span>*n-<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n13</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>, n+i, i+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d / 4\n"</span>, n+<span class="number">2</span>); <span class="comment">//n+3 = 3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"5 + 6\n"</span>); <span class="comment">// n + 4</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">7</span>;i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>, i, n+i-<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d / %d\n"</span>, n+<span class="number">10</span>, <span class="number">13</span>); <span class="comment">//n+11  8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>, n+<span class="number">3</span>, n+<span class="number">11</span>); <span class="comment">//n+12 3*8</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n14</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"1 + 2"</span>); <span class="comment">//15 2*14</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"3 / 4"</span>); <span class="comment">//16 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"5 / 6"</span>); <span class="comment">//17 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"16 + 17"</span>);<span class="comment">//18 2</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"7 / 8"</span>); <span class="comment">//19 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"9 / 10"</span>); <span class="comment">//20 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"19 + 20"</span>); <span class="comment">//21 2</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"18 + 21"</span>);<span class="comment">//22 4</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"15 - 22"</span>); <span class="comment">//23 24</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"11 - 12"</span>);<span class="comment">//24 0</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"13 - 14"</span>); <span class="comment">//25 0</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"24 + 25"</span>); <span class="comment">//26 0</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"26 + 23"</span>);<span class="comment">// 27</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n4</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 * 2\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"3 + 5\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"4 + 6\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n5</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 / 2\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"6 / 3\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"4 - 7\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"5 * 8\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n6</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 * 2\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"7 - 3\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"8 - 4\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"9 - 5\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"10 + 6\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n7</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 * 2\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"3 / 4\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"5 + 6\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"8 - 9\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"11 / 10\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"12 * 7\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n8</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"3 + 9\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"4 - 5\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"6 * 11\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"7 * 12\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"8 * 13\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"10 + 14\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n9</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"3 + 10\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"4 / 5\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"6 / 7\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"8 / 9\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"11 - 12\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"15 - 13\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"16 - 14\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n10</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"1 + 2"</span>); <span class="comment">//11 20</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"3 / 4"</span>);<span class="comment">//12 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"5 / 6"</span>);<span class="comment">// 13 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"7 / 8"</span>);<span class="comment">//14 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"9 / 10"</span>);<span class="comment">//15 1</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"11 + 12"</span>);<span class="comment">//16 21</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"16 + 13"</span>);<span class="comment">//17 22</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"17 + 14"</span>);<span class="comment">//18 23</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"18 + 15"</span>);<span class="comment">//18 24</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n11</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"1 + 2"</span>); <span class="comment">//12 22</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"12 / 3"</span>); <span class="comment">//13 2</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"4 + 5"</span>);<span class="comment">//14 22</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"14 + 13"</span>); <span class="comment">//15 24</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"6 - 7"</span>);<span class="comment">//16 0</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"8 - 9"</span>); <span class="comment">//17 0</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"10 - 11"</span>); <span class="comment">// 18 0</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"16 * 17"</span>);<span class="comment">//19</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"18 * 19"</span>);<span class="comment">//20</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"20 + 15"</span>);<span class="comment">//21</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">n12</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"1 + 2"</span>); <span class="comment">// 13 24</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"3 - 4"</span>); <span class="comment">// 14</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"14 * 5"</span>); <span class="comment">//15</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"15 * 6"</span>); <span class="comment">//16</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"16 * 7"</span>);<span class="comment">//17</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"17 * 8"</span>);<span class="comment">//18</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"18 * 9"</span>);<span class="comment">//19</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"19 * 10"</span>);<span class="comment">//20</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"20 * 11"</span>);<span class="comment">//21</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"21 * 12"</span>);<span class="comment">//22</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"22 + 13"</span>);<span class="comment">//23</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">4</span>) n4();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">5</span>) n5();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">6</span>) n6();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">7</span>) n7();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">8</span>) n8();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">9</span>) n9();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">10</span>) n10();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">11</span>) n11();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">12</span>) n12();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">13</span>) n13();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">14</span>) n14();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            n15();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="标程">标程</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//	freopen("data.in","r",stdin);</span></span><br><span class="line"><span class="comment">//	freopen("dataa.out","w",stdout);</span></span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line">		<span class="keyword">if</span> (n&gt;=<span class="number">15</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>); <span class="built_in">printf</span>(<span class="string">"3 + 4\n"</span>); <span class="built_in">printf</span>(<span class="string">"5 + 6\n"</span>); <span class="built_in">printf</span>(<span class="string">"7 + 8\n"</span>); <span class="built_in">printf</span>(<span class="string">"%d + 9\n"</span>,n+<span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d / 10\n"</span>,n+<span class="number">2</span>); <span class="built_in">printf</span>(<span class="string">"%d / 11\n"</span>,n+<span class="number">3</span>); <span class="built_in">printf</span>(<span class="string">"%d / 12\n"</span>,n+<span class="number">4</span>); <span class="built_in">printf</span>(<span class="string">"%d / 13\n"</span>,n+<span class="number">5</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>,n+<span class="number">6</span>,n+<span class="number">7</span>); <span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>,n+<span class="number">8</span>,n+<span class="number">9</span>); <span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>,n+<span class="number">10</span>,n+<span class="number">11</span>); <span class="built_in">printf</span>(<span class="string">"14 - 15\n"</span>);</span><br><span class="line">			<span class="keyword">int</span> now=n+<span class="number">13</span>; <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">16</span>;i&lt;=n;i++)&#123;<span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>,i,now); now++;&#125; <span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>,n+<span class="number">12</span>,now); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n&gt;=<span class="number">12</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>-<span class="number">24</span>;i++) <span class="built_in">printf</span>(<span class="string">"%d / %d\n"</span>,i*<span class="number">2</span>+<span class="number">1</span>,i*<span class="number">2</span>+<span class="number">2</span>); <span class="keyword">int</span> num=n*<span class="number">4</span>-<span class="number">46</span>;</span><br><span class="line">			<span class="keyword">int</span> now=n+<span class="number">1</span>+n*<span class="number">2</span>-<span class="number">24</span>;</span><br><span class="line">			<span class="keyword">if</span> (n!=<span class="number">12</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d - %d\n"</span>,n+<span class="number">1</span>,n+<span class="number">2</span>); now++;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n*<span class="number">2</span>-<span class="number">24</span>;i++)&#123;<span class="built_in">printf</span>(<span class="string">"%d - %d\n"</span>,now,n+<span class="number">1</span>+i); now++;&#125; </span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">int</span> k1=now;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d - %d\n"</span>,num+<span class="number">1</span>,num+<span class="number">2</span>); num+=<span class="number">3</span>; now++;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=num;i&lt;=n;i++)&#123;<span class="built_in">printf</span>(<span class="string">"%d * %d\n"</span>,i,now); now++;&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>,k1,now); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">24</span>-n*<span class="number">2</span>;i++) <span class="built_in">printf</span>(<span class="string">"%d / %d\n"</span>,<span class="number">1</span>+<span class="number">2</span>*i,<span class="number">2</span>+<span class="number">2</span>*i);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>,n+<span class="number">1</span>,n+<span class="number">2</span>); <span class="keyword">int</span> now=n+<span class="number">26</span>-n*<span class="number">2</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">24</span>-n*<span class="number">2</span>;i++) &#123;<span class="built_in">printf</span>(<span class="string">"%d + %d\n"</span>,n+<span class="number">1</span>+i,now); now++;&#125;</span><br><span class="line">			<span class="keyword">if</span> (n==<span class="number">10</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"7 - 8\n"</span>); <span class="built_in">printf</span>(<span class="string">"17 * 9\n"</span>); <span class="built_in">printf</span>(<span class="string">"18 * 10\n"</span>); <span class="built_in">printf</span>(<span class="string">"19 * 11\n"</span>); <span class="built_in">printf</span>(<span class="string">"20 + 16\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n==<span class="number">9</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>); <span class="built_in">printf</span>(<span class="string">"3 + 10\n"</span>); <span class="built_in">printf</span>(<span class="string">"4 / 5\n"</span>); <span class="built_in">printf</span>(<span class="string">"6 / 7\n"</span>); <span class="built_in">printf</span>(<span class="string">"8 / 9\n"</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"11 - 12\n"</span>); <span class="built_in">printf</span>(<span class="string">"15 - 13\n"</span>); <span class="built_in">printf</span>(<span class="string">"16 - 14\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n==<span class="number">8</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 + 2\n"</span>); <span class="built_in">printf</span>(<span class="string">"3 + 9\n"</span>); <span class="built_in">printf</span>(<span class="string">"4 - 5\n"</span>); <span class="built_in">printf</span>(<span class="string">"6 * 11\n"</span>); <span class="built_in">printf</span>(<span class="string">"7 * 12\n"</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"8 * 13\n"</span>); <span class="built_in">printf</span>(<span class="string">"10 + 14\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n==<span class="number">7</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 * 2\n"</span>); <span class="built_in">printf</span>(<span class="string">"3 / 4\n"</span>); <span class="built_in">printf</span>(<span class="string">"5 + 6\n"</span>); <span class="built_in">printf</span>(<span class="string">"8 - 9\n"</span>); <span class="built_in">printf</span>(<span class="string">"11 / 10\n"</span>); <span class="built_in">printf</span>(<span class="string">"12 * 7\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n&lt;=<span class="number">3</span>)&#123;<span class="built_in">printf</span>(<span class="string">"-1\n"</span>); <span class="keyword">continue</span>;&#125;</span><br><span class="line">		<span class="keyword">if</span> (n==<span class="number">6</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 * 2\n"</span>); <span class="built_in">printf</span>(<span class="string">"7 - 3\n"</span>); <span class="built_in">printf</span>(<span class="string">"8 - 4\n"</span>); <span class="built_in">printf</span>(<span class="string">"9 - 5\n"</span>); <span class="built_in">printf</span>(<span class="string">"10 + 6\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n==<span class="number">5</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 / 2\n"</span>); <span class="built_in">printf</span>(<span class="string">"6 / 3\n"</span>); <span class="built_in">printf</span>(<span class="string">"4 - 7\n"</span>); <span class="built_in">printf</span>(<span class="string">"5 * 8\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (n==<span class="number">4</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 * 2\n"</span>); <span class="built_in">printf</span>(<span class="string">"3 + 5\n"</span>); <span class="built_in">printf</span>(<span class="string">"4 + 6\n"</span>); <span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5308">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>给定一个n，则对应一个长度$2<em>n-1$数组，此数组前 $n$ 个数全为 $n$, 最后一个数必须是24，即 第 2</em>n-1 个数是24。<br>通过把这n个数加减乘除，每个数都必须用一次，且只能一次，并且运算完的数也都得用一次。也就是做n-1次。<br>输出过程 xi ? xj  第 i 个数与第 j 个数做 ? 运算 这种形式<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5301 Buildings(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/25/HDU5301/"/>
    <id>http://tenlee2012.github.io/2015/07/25/HDU5301/</id>
    <published>2015-07-25T06:35:17.000Z</published>
    <updated>2015-07-29T12:14:12.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5301" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>$n*m$列的矩阵，删除一个格子$x,y$。用矩形来填充矩阵。且矩形至少有一边是在矩阵的边缘上。求满足条件的矩形填充方式中面积最大的矩形，要使得该最大矩形的面积最小。<br><a id="more"></a></p>
<h3 id="样例分析：">样例分析：</h3><p>见题</p>
<h3 id="解题思路：">解题思路：</h3><p>任何矩形都可以分为宽度为1的小矩形，所以只考虑矩形的可以的最小长度即可。</p>
<p>讨论：<br>$m$ 代表行，$n$ 代表列<br>输入的时候先输入行，在输入列，当行比列大的时候要交换<br>任何矩形都可以分为宽度为1的小矩形，所以只考虑矩形的可以的最小长度即可。宽度始终为 $1$<br>当没有删除格子时，最小的面积是 $ans = min((n+1)/2,(m+1)/2)$<br>当 x，y处于矩形正中央时 ans- 1即可<br>其他情况：</p>
<pre><code>如果m &gt; n <span class="function"><span class="title">swap</span><span class="params">(n,m)</span></span>, <span class="function"><span class="title">swap</span><span class="params">(x,y)</span></span>
之后如图所示，上下取大的 e，左右取小的f
面积就应该为 ans2 = <span class="function"><span class="title">min</span><span class="params">(e, f)</span></span>
如果这个 ans2 比 最小面积ans小，肯定输入ans
否则就是 ans2
</code></pre><p><img src="http://files.cnblogs.com/files/tenlee/2002.ico" alt="此处输入图片的描述"></p>
<h3 id="代码：">代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mymin</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mymax</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("Mul2/data/data1002/b.in", "r", stdin);</span></span><br><span class="line">    <span class="comment">//freopen("2.out", "w", stdout);</span></span><br><span class="line">    <span class="keyword">int</span> n, m, x, y;</span><br><span class="line">    <span class="keyword">int</span> le, ri, up, down;</span><br><span class="line">    <span class="keyword">int</span> e, f, g;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;m, &amp;n, &amp;x, &amp;y))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(m &gt; n)<span class="comment">//n为长边,m为短边</span></span><br><span class="line">        &#123;</span><br><span class="line">            swap(n, m); swap(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">        le = y - <span class="number">1</span>;<span class="comment">//删除的格子距左端的距离 </span></span><br><span class="line">        ri = n - y; <span class="comment">//删除的格子距右端的距离 </span></span><br><span class="line">        e = mymin(le, ri);</span><br><span class="line"></span><br><span class="line">        up = x - <span class="number">1</span>; <span class="comment">//删除的格子距上端的距离 </span></span><br><span class="line">        down = m - x;<span class="comment">//删除的格子距下端的距离 </span></span><br><span class="line">        f = mymax(up, down);</span><br><span class="line"></span><br><span class="line">        g = mymin(e+<span class="number">1</span>, f);</span><br><span class="line">        ans = (m+<span class="number">1</span>) / <span class="number">2</span>;<span class="comment">//没有删除格子时，最小的面积</span></span><br><span class="line">        <span class="keyword">if</span>(le == ri &amp;&amp; ri == up &amp;&amp; up== down)<span class="comment">//如果n，m为奇数，且删除的格子在正中间</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, le);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mymax(ans, mymin(e+<span class="number">1</span>, f)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5301">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>$n*m$列的矩阵，删除一个格子$x,y$。用矩形来填充矩阵。且矩形至少有一边是在矩阵的边缘上。求满足条件的矩形填充方式中面积最大的矩形，要使得该最大矩形的面积最小。<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5305 Friends(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/25/HDU5305/"/>
    <id>http://tenlee2012.github.io/2015/07/25/HDU5305/</id>
    <published>2015-07-25T02:15:17.000Z</published>
    <updated>2015-07-29T12:14:17.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5305" target="_blank" rel="external">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>有 <code>n</code>个人，<code>m对</code>朋友关系，朋友之间可以选择成为 在线朋友 或者 离线朋友，每个人都想有相同数目的 在线朋友 和 离线朋友。（比如一个人有 x 个在线朋友，那么他必须有 x 个离线朋友）但是不同的人 x 可以不同。求有多少种方案可以满足他们的要求。<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p><code>2</code> 两个测试用例<br><code>3 3</code> 三个人，三对朋友关系<br><code>1 2</code> 1 2 是朋友，他们可以选择成为离线或者在线朋友<br><code>2 3</code> 2 3 是朋友，他们可以选择成为离线或者在线朋友<br><code>3 1</code> 3 4 是朋友，他们可以选择成为离线或者在线朋友<br><code>4 4</code>  同理<br><code>1 2</code><br><code>2 3</code><br><code>3 4</code><br><code>4 1</code></p>
<h3 id="解题思路">解题思路</h3><p><img src="http://files.cnblogs.com/files/tenlee/2006.ico" alt="此处输入图片的描述"></p>
<h3 id="代码">代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> du_on[maxn], du_off[maxn], g[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n, m, ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt; n) ans++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(y &gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(du_on[x] != du_off[x]) <span class="keyword">return</span>; <span class="comment">//如果一个人的在线朋友和离线朋友不相等,直接退出，</span></span><br><span class="line">        dfs(x+<span class="number">1</span>, x+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">if</span>(g[x][y]) <span class="comment">//枚举</span></span><br><span class="line">        &#123;</span><br><span class="line">            du_on[x]++; du_on[y]++;<span class="comment">//在线朋友个数加一</span></span><br><span class="line">            dfs(x, y+<span class="number">1</span>);</span><br><span class="line">            du_on[x]--; du_on[y]--;<span class="comment">//还原回来，因为下面的dfs可能会用到</span></span><br><span class="line"></span><br><span class="line">            du_off[x]++; du_off[y]++;</span><br><span class="line">            dfs(x, y+<span class="number">1</span>);</span><br><span class="line">            du_off[x]--; du_off[y]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            dfs(x, y+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T, x, y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">        clc(du_on, <span class="number">0</span>);</span><br><span class="line">        clc(du_off, <span class="number">0</span>);</span><br><span class="line">        clc(g, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">            g[x][y] = g[y][x] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        dfs(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5305">戳我</a></p>
<h3 id="题目大意：">题目大意：</h3><p>有 <code>n</code>个人，<code>m对</code>朋友关系，朋友之间可以选择成为 在线朋友 或者 离线朋友，每个人都想有相同数目的 在线朋友 和 离线朋友。（比如一个人有 x 个在线朋友，那么他必须有 x 个离线朋友）但是不同的人 x 可以不同。求有多少种方案可以满足他们的要求。<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Django + nginx + uwsgi搭建博客 整理]]></title>
    <link href="http://tenlee2012.github.io/2015/07/24/Django+nginx+uwsgi%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%20%E6%95%B4%E7%90%86/"/>
    <id>http://tenlee2012.github.io/2015/07/24/Django+nginx+uwsgi搭建博客 整理/</id>
    <published>2015-07-24T06:02:17.000Z</published>
    <updated>2016-03-03T14:55:30.328Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>站在前辈的肩膀上</p>
</blockquote>
<h3 id="第一步-&gt;用Django搭建简易博客">第一步-&gt;用Django搭建简易博客</h3><p>来自<a href="http://andrewliu.tk/" target="_blank" rel="external">Andrew Liu</a></p>
<ul>
<li><a href="http://andrewliu.tk/2014/12/22/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%B8%80-Django%E7%AE%80%E4%BB%8B/" target="_blank" rel="external">Django搭建简易博客教程(一)Django简介</a></li>
<li><a href="http://andrewliu.tk/2014/12/22/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%BA%8C-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%92%8CDjango%E5%AE%89%E8%A3%85/" target="_blank" rel="external">Django搭建简易博客教程(二)开发环境和Django安装</a></li>
<li><a href="http://andrewliu.tk/2014/12/22/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%B8%89-%E9%A1%B9%E7%9B%AE%E4%B8%8EApp/" target="_blank" rel="external">Django搭建简易博客教程(三)项目与App</a></li>
<li><a href="http://andrewliu.tk/2014/12/26/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E5%9B%9B-Models/" target="_blank" rel="external">Django搭建简易博客教程(四)Models</a></li>
<li><a href="http://andrewliu.tk/2014/12/27/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%BA%94-Admin/" target="_blank" rel="external">Django搭建简易博客教程(五)Admin</a></li>
<li><a href="http://andrewliu.tk/2014/12/27/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E5%85%AD-Views%E5%92%8CURL/" target="_blank" rel="external">Django搭建简易博客教程(六)Views和URL</a> </li>
<li><p><a href="http://andrewliu.tk/2014/12/27/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%B8%83-Template/" target="_blank" rel="external">Django搭建简易博客教程(七)Template</a></p>
<a id="more"></a>
<ul>
<li>此处补充 <figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">   <span class="preprocessor">#...</span></span><br><span class="line">   <span class="string">'DIRS'</span>: [os.path.<span class="keyword">join</span>(BASE_DIR, <span class="string">'templates'</span>)],</span><br><span class="line">   <span class="preprocessor">#...</span></span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p><a href="http://andrewliu.tk/2014/12/28/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E5%85%AB-%E5%8A%A8%E6%80%81URL/" target="_blank" rel="external">Django搭建简易博客教程(八)动态URL</a></p>
</li>
<li><a href="http://andrewliu.tk/2015/01/09/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%B9%9D-%E5%A4%9A%E8%AF%B4-markdown%E5%92%8C%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE/" target="_blank" rel="external">Django搭建简易博客教程(九)多说,markdown和代码高亮</a><ul>
<li>此处补充 应该 pip install pygments</li>
</ul>
</li>
</ul>
<p>作者在gitbooks出的书上还有额外精彩的章节</p>
<ul>
<li><strong>归档, AboutMe和标签分类</strong></li>
<li><strong>搜索和ReadMore</strong></li>
<li><strong>RSS和分页</strong><br>地址：<a href="https://www.gitbook.com/book/andrew-liu/django-blog/details" target="_blank" rel="external">戳我</a><h3 id="第二步-&gt;部署在nginx上">第二步-&gt;部署在nginx上</h3>感谢这位博主：<a href="http://blog.igevin.info/" target="_blank" rel="external">gevin</a></li>
<li><a href="http://blog.igevin.info/2014/09/30/deploy-django-with-nginx-and-uwsgi-on-Ubuntu/" target="_blank" rel="external">基于nginx和uWSGI在Ubuntu上部署Django</a></li>
</ul>
<p>以上本人亲测可行，ubuntu15.04, python2.7 和 python3.4均可</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>站在前辈的肩膀上</p>
</blockquote>
<h3 id="第一步-&gt;用Django搭建简易博客">第一步-&gt;用Django搭建简易博客</h3><p>来自<a href="http://andrewliu.tk/">Andrew Liu</a></p>
<ul>
<li><a href="http://andrewliu.tk/2014/12/22/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%B8%80-Django%E7%AE%80%E4%BB%8B/">Django搭建简易博客教程(一)Django简介</a></li>
<li><a href="http://andrewliu.tk/2014/12/22/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%BA%8C-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%92%8CDjango%E5%AE%89%E8%A3%85/">Django搭建简易博客教程(二)开发环境和Django安装</a></li>
<li><a href="http://andrewliu.tk/2014/12/22/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%B8%89-%E9%A1%B9%E7%9B%AE%E4%B8%8EApp/">Django搭建简易博客教程(三)项目与App</a></li>
<li><a href="http://andrewliu.tk/2014/12/26/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E5%9B%9B-Models/">Django搭建简易博客教程(四)Models</a></li>
<li><a href="http://andrewliu.tk/2014/12/27/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%BA%94-Admin/">Django搭建简易博客教程(五)Admin</a></li>
<li><a href="http://andrewliu.tk/2014/12/27/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E5%85%AD-Views%E5%92%8CURL/">Django搭建简易博客教程(六)Views和URL</a> </li>
<li><p><a href="http://andrewliu.tk/2014/12/27/Django%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-%E4%B8%83-Template/">Django搭建简易博客教程(七)Template</a></p>]]>
    
    </summary>
    
      <category term="Django" scheme="http://tenlee2012.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 5288 OO’s Sequence(2015多校联合)]]></title>
    <link href="http://tenlee2012.github.io/2015/07/23/HDU5288/"/>
    <id>http://tenlee2012.github.io/2015/07/23/HDU5288/</id>
    <published>2015-07-23T03:15:17.000Z</published>
    <updated>2015-07-29T12:14:05.000Z</updated>
    <content type="html"><![CDATA[<h3 id="题目链接：">题目链接：</h3><h2 id="戳我"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5288" target="_blank" rel="external">戳我</a></h2><h3 id="题目大意：">题目大意：</h3><p><strong>f(l, r)</strong>代表一个l，r区间内，符合任选i，j <code>（l &lt;= j &lt;= r &amp;&amp; j != i）</code>，有$a<em>{i}$ % $a</em>{j}$ != 0的i的个数<br>求 $\sum<em>{i = 1}^n \sum</em>{j = i}^n f(i, j) mod(10^9+7)$<br><a id="more"></a></p>
<h3 id="样例解释">样例解释</h3><p><code>5</code>  即为n，代表有n个数，n &lt;= $10^5$<br><code>1 2 3 4 5</code> 分别为上面的 n 个数，0 &lt; $a_{i}$ &lt;= 10000<br>f(1,1) = {1} = 1; f(1,2) = {1} = 1; f(1,3) = {1} = 1; f(1,4) = {1} = 1; f(1,5) = {1} = 1<br>f(2,2) = {2} =1; f(2,3) = {2,3} = 2; f(2,4) = {2,3} = 2; f(2,5) = {2,3,5} = 3<br>f(3,3) = {3} = 1; f(3,4) = {3,4} = 2; f(3,5） = {3,4,5} = 3；<br>f(4,4) = {4} = 1; f(4, 5) = {4,5} = 2;<br>f(5,5) = {5} = 1;<br><code>故所有加起来为23</code></p>
<h3 id="解题思路">解题思路</h3><p>分析：数组长度为$10^5$,而每个数不超多 10000<br>假设一个数的<code>位置是 pos 值为x</code>，那个在<code>x</code>左侧和x最近的属于x的因子的位置是l，在<code>x</code>右侧和x最近的属于x因子的位置是r，那么在<code>(l+1， r-1)</code>这个区间内，任选左区间一个位置ll，在任选右区间一个位置rr，那么x必为此区间符合条件的一个数<br>故 $num = (x-l)*(r-x)$<br>只需枚举每一个位置，极其l，r即可</p>
<h4 id="思路：">思路：</h4><p>可以先预处理10000个数的每个数的因子，在枚举每一个位置的时候即可知道最左的因子和最右的因子了</p>
<h3 id="代码：">代码：</h3><p>452ms<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Author LJH</span></span><br><span class="line"><span class="comment">//www.cnblogs.com/tenlee</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> clc(a, b) memset(a, b, sizeof(a))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], ha[maxn], l[maxn], r[maxn], pre[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    v[<span class="number">1</span>].push_back(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>; i*j &lt;= maxn; j++)</span><br><span class="line">        &#123;</span><br><span class="line">           v[j*i].push_back(i); </span><br><span class="line">        &#125;</span><br><span class="line">        v[i].push_back(<span class="number">1</span>);</span><br><span class="line">        v[i].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("1001.in", "r", stdin);</span></span><br><span class="line">    <span class="keyword">int</span> n, i, j, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)       </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        clc(pre, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            l[i] = <span class="number">1</span>;</span><br><span class="line">            k = a[i];</span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; (<span class="keyword">int</span>)v[k].size(); j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(pre[v[k][j]] != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    l[i] = max(l[i], pre[v[k][j]] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//if(a[i] == a[i-1]) l[i] = i;</span></span><br><span class="line">            pre[a[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        clc(pre, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = n; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            r[i] = n;</span><br><span class="line">            k = a[i];</span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; (<span class="keyword">int</span>)v[k].size(); j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(pre[v[k][j]] != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    r[i] = min(r[i], pre[v[k][j]] - <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//if(a[i]==a[i+1]) r[i] = i;</span></span><br><span class="line">            pre[a[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = (ans + (<span class="keyword">long</span> <span class="keyword">long</span>)( i - l[i] + <span class="number">1</span>) * (<span class="keyword">long</span> <span class="keyword">long</span>)(r[i] - i + <span class="number">1</span>) % mod) % mod;</span><br><span class="line">            <span class="keyword">if</span>(ans &gt; mod) ans -= mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans % mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>标程代码：<br>1232ms<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> P 1000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,i,a[N],j,t,q[N];</span><br><span class="line"><span class="keyword">int</span> l[N],tmp,r[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a1,a2,ans;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">       <span class="comment">// freopen("a.in","r",stdin);</span></span><br><span class="line">  <span class="comment">//  freopen("a.out","w",stdout);</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">101</span>;i&lt;=<span class="number">10000</span>;i++)</span><br><span class="line">    vec[i].clear();</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        l[i]=<span class="number">0</span>;</span><br><span class="line">        r[i]=n+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;<span class="number">100</span>)</span><br><span class="line">        vec[a[i]].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">1</span>;j&lt;=<span class="number">100</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i]%j==<span class="number">0</span>) l[i]=max(l[i],tmp);</span><br><span class="line">            <span class="keyword">if</span> (a[i]==j)</span><br><span class="line">            tmp=i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        tmp=n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i]%j==<span class="number">0</span>) r[i]=min(r[i],tmp);</span><br><span class="line">            <span class="keyword">if</span> (a[i]==j)</span><br><span class="line">            tmp=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">101</span>;i&lt;=<span class="number">10000</span>;i++)</span><br><span class="line">    q[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span> (a[i]&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=a[i];j&lt;=<span class="number">10000</span>;j=j+a[i])</span><br><span class="line">        <span class="keyword">while</span> ((q[j]&lt;vec[j].size())&amp;&amp;(vec[j][q[j]]&lt;i))</span><br><span class="line">        &#123;</span><br><span class="line">              r[vec[j][q[j]]]=min(r[vec[j][q[j]]],i);</span><br><span class="line">              <span class="keyword">if</span> ((q[j]&lt;vec[j].size()-<span class="number">1</span>)&amp;&amp;(vec[j][q[j]+<span class="number">1</span>]&lt;i))</span><br><span class="line">              q[j]++;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">101</span>;i&lt;=<span class="number">10000</span>;i++)</span><br><span class="line">    q[i]=vec[i].size()-<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    <span class="keyword">if</span> (a[i]&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=a[i];j&lt;=<span class="number">10000</span>;j=j+a[i])</span><br><span class="line">        <span class="keyword">while</span> ((q[j]&gt;=<span class="number">0</span>)&amp;&amp;(vec[j][q[j]]&gt;i))</span><br><span class="line">        &#123;</span><br><span class="line">              l[vec[j][q[j]]]=max(l[vec[j][q[j]]],i);</span><br><span class="line">              <span class="keyword">if</span> ((q[j]&gt;<span class="number">0</span>)&amp;&amp;(vec[j][q[j]-<span class="number">1</span>]&gt;i))</span><br><span class="line">              q[j]--;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a1=r[i]-i;</span><br><span class="line">        a2=i-l[i];</span><br><span class="line">        ans=(ans+a1*a2)%P;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="题目链接：">题目链接：</h3><h2 id="戳我"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5288">戳我</a></h2><h3 id="题目大意：">题目大意：</h3><p><strong>f(l, r)</strong>代表一个l，r区间内，符合任选i，j <code>（l &lt;= j &lt;= r &amp;&amp; j != i）</code>，有$a<em>{i}$ % $a</em>{j}$ != 0的i的个数<br>求 $\sum<em>{i = 1}^n \sum</em>{j = i}^n f(i, j) mod(10^9+7)$<br>]]>
    
    </summary>
    
      <category term="HDUOJ" scheme="http://tenlee2012.github.io/tags/HDUOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://tenlee2012.github.io/2015/06/09/hello-world/"/>
    <id>http://tenlee2012.github.io/2015/06/09/hello-world/</id>
    <published>2015-06-09T09:02:17.000Z</published>
    <updated>2015-07-29T12:15:26.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>]]>
    
    </summary>
    
  </entry>
  
</feed>